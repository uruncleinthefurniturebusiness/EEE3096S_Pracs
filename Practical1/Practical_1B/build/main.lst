ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** 
   3:Core/Src/main.c **** /* SMTJOS022 X BHYEBR002 EEE3096S Practical 1B*/
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** /**
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @file           : main.c
   8:Core/Src/main.c ****   * @brief          : Main program body
   9:Core/Src/main.c ****   ******************************************************************************
  10:Core/Src/main.c ****   * @attention
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  13:Core/Src/main.c ****   * All rights reserved.
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  16:Core/Src/main.c ****   * in the root directory of this software component.
  17:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  18:Core/Src/main.c ****   *
  19:Core/Src/main.c ****   ******************************************************************************
  20:Core/Src/main.c ****   */
  21:Core/Src/main.c **** /* USER CODE END Header */
  22:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  23:Core/Src/main.c **** #include "main.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdint.h>
  28:Core/Src/main.c **** #include "stm32f0xx.h"
  29:Core/Src/main.c **** //#include <lcd_stm32f0.c>
  30:Core/Src/main.c **** #include <stdlib.h>
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** #define MAX_ITER 100
  36:Core/Src/main.c **** #define SCALE 1000000
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****  int dim[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c ****  uint32_t  start_time=0, end_time=0, execution_time=0;
  56:Core/Src/main.c ****  uint64_t check_sum=0;
  57:Core/Src/main.c ****  uint64_t checksums[5];
  58:Core/Src/main.c ****  uint32_t exec_times[5];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /*
  61:Core/Src/main.c ****   start_time
  62:Core/Src/main.c ****   end_time
  63:Core/Src/main.c ****   execution_time 
  64:Core/Src/main.c ****   checksum: should be uint64_t
  65:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  66:Core/Src/main.c **** */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  75:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 115:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   //TODO: Record the start time
 119:Core/Src/main.c ****   //start_time = HAL_Get_Tick();
 120:Core/Src/main.c ****   
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 123:Core/Src/main.c ****   //check_sum = calculate_mandelbrot_fixed_point_arithmetic(dim[0], dim[0], MAX_ITER);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Record the end time
 126:Core/Src/main.c ****   //end_time = HAL_Get_Tick();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   //TODO: Calculate the execution time
 129:Core/Src/main.c ****   //execution_time = end_time - start_time;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   const int num_sizes = sizeof(dim) / sizeof(dim[0]);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****       // Arrays to hold results for viewing in debugger
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****       for (int i = 0; i < num_sizes; i++) {
 136:Core/Src/main.c ****           // Record start time
 137:Core/Src/main.c ****           start_time = HAL_GetTick();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****           // Run fixed-point Mandelbrot with square image dim[i] x dim[i]
 140:Core/Src/main.c ****           check_sum = calculate_mandelbrot_fixed_point_arithmetic(dim[i], dim[i], MAX_ITER);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****           // Record end time
 143:Core/Src/main.c ****           end_time = HAL_GetTick();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****           execution_time = end_time - start_time;
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****           // Store results
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 4


 148:Core/Src/main.c ****           checksums[i] = check_sum;
 149:Core/Src/main.c ****           exec_times[i] = execution_time;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****           // Toggle LED1 on to signal completion of this run
 152:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****           // Hold LEDs on for 1 second
 155:Core/Src/main.c ****           HAL_Delay(1000);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****           // Turn off LED1 before next run
 158:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 159:Core/Src/main.c ****       }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****       // Turn off LED0 after all runs done
 162:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 163:Core/Src/main.c ****   
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 169:Core/Src/main.c ****   
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   //TODO: Turn off the LEDs
 172:Core/Src/main.c ****   
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END 2 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* Infinite loop */
 177:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 178:Core/Src/main.c ****   while (1)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     /* USER CODE END WHILE */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   /* USER CODE END 3 */
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief System Clock Configuration
 189:Core/Src/main.c ****   * @retval None
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** void SystemClock_Config(void)
 192:Core/Src/main.c **** {
 193:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 194:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 197:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204:Core/Src/main.c ****   {
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 5


 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief GPIO Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** static void MX_GPIO_Init(void)
 228:Core/Src/main.c **** {
  26              		.loc 1 228 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 229:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 229 3 view .LVU1
  39              		.loc 1 229 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 230:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 231:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 234:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 234 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 234 3 view .LVU4
  48              		.loc 1 234 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 6


  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 234 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 234 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 234 3 view .LVU8
 235:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 235 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 235 3 view .LVU10
  66              		.loc 1 235 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 235 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 235 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 235 3 view .LVU14
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 238 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 241:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 241 3 view .LVU16
  88              		.loc 1 241 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 242:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 242 3 is_stmt 1 view .LVU18
  92              		.loc 1 242 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 243:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 243 3 is_stmt 1 view .LVU20
  96              		.loc 1 243 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 244:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 244 3 is_stmt 1 view .LVU22
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 7


 100              		.loc 1 244 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 245:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 245 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 248:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 249:Core/Src/main.c **** }
 107              		.loc 1 249 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_lmul
 120              		.global	__aeabi_ldivmod
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
 129              	.LVL3:
 130              	.LFB43:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 252:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 253:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 253 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 72
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 253 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
 149              	.LCFI3:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 8


 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 93B0     		sub	sp, sp, #76
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 112
 158 000e 8346     		mov	fp, r0
 159 0010 1191     		str	r1, [sp, #68]
 160 0012 9146     		mov	r9, r2
 254:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 254 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 255:Core/Src/main.c ****     //TODO: Complete the function implementation
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   for (int y = 0; y < height-1; y++){
 163              		.loc 1 258 3 view .LVU29
 164              	.LBB6:
 165              		.loc 1 258 8 view .LVU30
 166              		.loc 1 258 12 is_stmt 0 view .LVU31
 167 0014 0023     		movs	r3, #0
 168 0016 1093     		str	r3, [sp, #64]
 169              	.LBE6:
 254:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 170              		.loc 1 254 12 view .LVU32
 171 0018 0023     		movs	r3, #0
 172 001a 0024     		movs	r4, #0
 173 001c 0C93     		str	r3, [sp, #48]
 174 001e 0D94     		str	r4, [sp, #52]
 175              	.LBB13:
 176              		.loc 1 258 3 view .LVU33
 177 0020 87E0     		b	.L5
 178              	.LVL5:
 179              	.L13:
 180              	.LBB7:
 181              	.LBB8:
 182              	.LBB9:
 259:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 260:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 261:Core/Src/main.c **** 		  // x0 = (x/width) * 3.5 - 2.5
 262:Core/Src/main.c **** 		  int64_t x0 = ((int64_t)x * 3500000 / width) - 2500000;
 263:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 264:Core/Src/main.c **** 		  int64_t y0 = ((int64_t)y * 2000000 / height) - 1000000;
 265:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 266:Core/Src/main.c **** 		  int iter = 0;
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 		  while (iter< max_iterations){
 269:Core/Src/main.c **** 			  int64_t xi2 = (xi*xi)/SCALE;
 270:Core/Src/main.c **** 			  int64_t yi2 = (yi*yi)/SCALE;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 			  if (xi2 + yi2 > 4 * SCALE) {
 273:Core/Src/main.c ****                   break;
 274:Core/Src/main.c ****               }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 9


 277:Core/Src/main.c **** 			  int64_t temp = xi2-yi2;
 183              		.loc 1 277 6 is_stmt 1 view .LVU34
 184              		.loc 1 277 14 is_stmt 0 view .LVU35
 185 0022 A41A     		subs	r4, r4, r2
 186 0024 9D41     		sbcs	r5, r5, r3
 187              	.LVL6:
 278:Core/Src/main.c **** 			  yi = (2*xi*yi)/SCALE+y0;
 188              		.loc 1 278 6 is_stmt 1 view .LVU36
 189              		.loc 1 278 16 is_stmt 0 view .LVU37
 190 0026 029A     		ldr	r2, [sp, #8]
 191 0028 039B     		ldr	r3, [sp, #12]
 192              	.LVL7:
 193              		.loc 1 278 16 view .LVU38
 194 002a 0098     		ldr	r0, [sp]
 195 002c 0199     		ldr	r1, [sp, #4]
 196 002e FFF7FEFF 		bl	__aeabi_lmul
 197              	.LVL8:
 198              		.loc 1 278 20 view .LVU39
 199 0032 4A4A     		ldr	r2, .L16
 200 0034 0023     		movs	r3, #0
 201 0036 FFF7FEFF 		bl	__aeabi_ldivmod
 202              	.LVL9:
 203              		.loc 1 278 9 view .LVU40
 204 003a 069A     		ldr	r2, [sp, #24]
 205 003c 079B     		ldr	r3, [sp, #28]
 206 003e 1218     		adds	r2, r2, r0
 207 0040 4B41     		adcs	r3, r3, r1
 208 0042 0292     		str	r2, [sp, #8]
 209 0044 0393     		str	r3, [sp, #12]
 210              	.LVL10:
 279:Core/Src/main.c **** 			  xi = temp + x0;
 211              		.loc 1 279 6 is_stmt 1 view .LVU41
 212              		.loc 1 279 9 is_stmt 0 view .LVU42
 213 0046 049E     		ldr	r6, [sp, #16]
 214 0048 059F     		ldr	r7, [sp, #20]
 215 004a 3619     		adds	r6, r6, r4
 216 004c 6F41     		adcs	r7, r7, r5
 217 004e 0096     		str	r6, [sp]
 218 0050 0197     		str	r7, [sp, #4]
 219              	.LVL11:
 280:Core/Src/main.c **** 			  iter++;
 220              		.loc 1 280 6 is_stmt 1 view .LVU43
 221              		.loc 1 280 10 is_stmt 0 view .LVU44
 222 0052 0123     		movs	r3, #1
 223 0054 9C46     		mov	ip, r3
 224 0056 E044     		add	r8, r8, ip
 225              	.LVL12:
 226              	.L6:
 227              		.loc 1 280 10 view .LVU45
 228              	.LBE9:
 268:Core/Src/main.c **** 			  int64_t xi2 = (xi*xi)/SCALE;
 229              		.loc 1 268 16 is_stmt 1 view .LVU46
 230 0058 C845     		cmp	r8, r9
 231 005a 24DA     		bge	.L7
 232              	.LBB10:
 269:Core/Src/main.c **** 			  int64_t yi2 = (yi*yi)/SCALE;
 233              		.loc 1 269 6 view .LVU47
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 10


 269:Core/Src/main.c **** 			  int64_t yi2 = (yi*yi)/SCALE;
 234              		.loc 1 269 23 is_stmt 0 view .LVU48
 235 005c 009A     		ldr	r2, [sp]
 236 005e 019B     		ldr	r3, [sp, #4]
 237 0060 1000     		movs	r0, r2
 238 0062 1900     		movs	r1, r3
 239 0064 FFF7FEFF 		bl	__aeabi_lmul
 240              	.LVL13:
 269:Core/Src/main.c **** 			  int64_t yi2 = (yi*yi)/SCALE;
 241              		.loc 1 269 14 view .LVU49
 242 0068 3D4A     		ldr	r2, .L16+4
 243 006a 0023     		movs	r3, #0
 244 006c FFF7FEFF 		bl	__aeabi_ldivmod
 245              	.LVL14:
 246 0070 0400     		movs	r4, r0
 247 0072 0D00     		movs	r5, r1
 248              	.LVL15:
 270:Core/Src/main.c **** 
 249              		.loc 1 270 6 is_stmt 1 view .LVU50
 270:Core/Src/main.c **** 
 250              		.loc 1 270 23 is_stmt 0 view .LVU51
 251 0074 0298     		ldr	r0, [sp, #8]
 252 0076 0399     		ldr	r1, [sp, #12]
 253 0078 0200     		movs	r2, r0
 254 007a 0B00     		movs	r3, r1
 255 007c FFF7FEFF 		bl	__aeabi_lmul
 256              	.LVL16:
 270:Core/Src/main.c **** 
 257              		.loc 1 270 14 view .LVU52
 258 0080 374A     		ldr	r2, .L16+4
 259 0082 0023     		movs	r3, #0
 260 0084 FFF7FEFF 		bl	__aeabi_ldivmod
 261              	.LVL17:
 262 0088 0200     		movs	r2, r0
 263 008a 0B00     		movs	r3, r1
 264              	.LVL18:
 272:Core/Src/main.c ****                   break;
 265              		.loc 1 272 6 is_stmt 1 view .LVU53
 272:Core/Src/main.c ****                   break;
 266              		.loc 1 272 14 is_stmt 0 view .LVU54
 267 008c 2000     		movs	r0, r4
 268 008e 2900     		movs	r1, r5
 269 0090 8018     		adds	r0, r0, r2
 270 0092 5941     		adcs	r1, r1, r3
 271 0094 0890     		str	r0, [sp, #32]
 272 0096 0991     		str	r1, [sp, #36]
 272:Core/Src/main.c ****                   break;
 273              		.loc 1 272 9 view .LVU55
 274 0098 0029     		cmp	r1, #0
 275 009a 04DC     		bgt	.L7
 276 009c C1D1     		bne	.L13
 277 009e 3149     		ldr	r1, .L16+8
 278 00a0 0898     		ldr	r0, [sp, #32]
 279 00a2 8842     		cmp	r0, r1
 280 00a4 BDD9     		bls	.L13
 281              	.LVL19:
 282              	.L7:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 11


 272:Core/Src/main.c ****                   break;
 283              		.loc 1 272 9 view .LVU56
 284              	.LBE10:
 281:Core/Src/main.c **** 		  }
 282:Core/Src/main.c **** 		  mandelbrot_sum = mandelbrot_sum + iter;
 285              		.loc 1 282 37 view .LVU57
 286 00a6 0F9C     		ldr	r4, [sp, #60]
 287 00a8 5D46     		mov	r5, fp
 288              		.loc 1 282 5 is_stmt 1 view .LVU58
 289              		.loc 1 282 37 is_stmt 0 view .LVU59
 290 00aa 4346     		mov	r3, r8
 291 00ac 0A93     		str	r3, [sp, #40]
 292 00ae DB17     		asrs	r3, r3, #31
 293 00b0 0B93     		str	r3, [sp, #44]
 294              		.loc 1 282 20 view .LVU60
 295 00b2 0C9A     		ldr	r2, [sp, #48]
 296 00b4 0D9B     		ldr	r3, [sp, #52]
 297 00b6 0A98     		ldr	r0, [sp, #40]
 298 00b8 0B99     		ldr	r1, [sp, #44]
 299 00ba 1218     		adds	r2, r2, r0
 300 00bc 4B41     		adcs	r3, r3, r1
 301 00be 0C92     		str	r2, [sp, #48]
 302 00c0 0D93     		str	r3, [sp, #52]
 303              	.LVL20:
 304              		.loc 1 282 20 view .LVU61
 305              	.LBE8:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 306              		.loc 1 259 34 is_stmt 1 discriminator 2 view .LVU62
 307 00c2 0134     		adds	r4, r4, #1
 308              	.LVL21:
 309              	.L11:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 310              		.loc 1 259 22 discriminator 1 view .LVU63
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 311              		.loc 1 259 29 is_stmt 0 discriminator 1 view .LVU64
 312 00c4 6B1E     		subs	r3, r5, #1
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 313              		.loc 1 259 22 discriminator 1 view .LVU65
 314 00c6 A342     		cmp	r3, r4
 315 00c8 2FDD     		ble	.L14
 316              	.LBB11:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 317              		.loc 1 262 5 is_stmt 1 view .LVU66
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 318              		.loc 1 262 19 is_stmt 0 view .LVU67
 319 00ca E117     		asrs	r1, r4, #31
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 320              		.loc 1 262 30 view .LVU68
 321 00cc 264A     		ldr	r2, .L16+12
 322 00ce 0023     		movs	r3, #0
 323 00d0 2000     		movs	r0, r4
 324 00d2 FFF7FEFF 		bl	__aeabi_lmul
 325              	.LVL22:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 326              		.loc 1 262 40 view .LVU69
 327 00d6 EB17     		asrs	r3, r5, #31
 328 00d8 2A00     		movs	r2, r5
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 12


 329 00da FFF7FEFF 		bl	__aeabi_ldivmod
 330              	.LVL23:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 331              		.loc 1 262 13 view .LVU70
 332 00de 234A     		ldr	r2, .L16+16
 333 00e0 0123     		movs	r3, #1
 334 00e2 5B42     		rsbs	r3, r3, #0
 335 00e4 8018     		adds	r0, r0, r2
 336 00e6 5941     		adcs	r1, r1, r3
 337 00e8 0490     		str	r0, [sp, #16]
 338 00ea 0591     		str	r1, [sp, #20]
 339              	.LVL24:
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 340              		.loc 1 264 5 is_stmt 1 view .LVU71
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 341              		.loc 1 264 19 is_stmt 0 view .LVU72
 342 00ec 1098     		ldr	r0, [sp, #64]
 343              	.LVL25:
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 344              		.loc 1 264 19 view .LVU73
 345 00ee C117     		asrs	r1, r0, #31
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 346              		.loc 1 264 30 view .LVU74
 347 00f0 1F4A     		ldr	r2, .L16+20
 348 00f2 0023     		movs	r3, #0
 349 00f4 FFF7FEFF 		bl	__aeabi_lmul
 350              	.LVL26:
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 351              		.loc 1 264 40 view .LVU75
 352 00f8 5346     		mov	r3, r10
 353 00fa DB17     		asrs	r3, r3, #31
 354 00fc 5246     		mov	r2, r10
 355 00fe FFF7FEFF 		bl	__aeabi_ldivmod
 356              	.LVL27:
 264:Core/Src/main.c **** 		  int64_t xi = 0, yi =0;
 357              		.loc 1 264 13 view .LVU76
 358 0102 1C4A     		ldr	r2, .L16+24
 359 0104 0123     		movs	r3, #1
 360 0106 5B42     		rsbs	r3, r3, #0
 361 0108 8018     		adds	r0, r0, r2
 362 010a 5941     		adcs	r1, r1, r3
 363 010c 0690     		str	r0, [sp, #24]
 364 010e 0791     		str	r1, [sp, #28]
 365              	.LVL28:
 265:Core/Src/main.c **** 		  int iter = 0;
 366              		.loc 1 265 5 is_stmt 1 view .LVU77
 266:Core/Src/main.c **** 
 367              		.loc 1 266 5 view .LVU78
 268:Core/Src/main.c **** 			  int64_t xi2 = (xi*xi)/SCALE;
 368              		.loc 1 268 5 view .LVU79
 266:Core/Src/main.c **** 
 369              		.loc 1 266 9 is_stmt 0 view .LVU80
 370 0110 0023     		movs	r3, #0
 371 0112 9846     		mov	r8, r3
 265:Core/Src/main.c **** 		  int iter = 0;
 372              		.loc 1 265 21 view .LVU81
 373 0114 0022     		movs	r2, #0
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 13


 374 0116 0023     		movs	r3, #0
 375 0118 0292     		str	r2, [sp, #8]
 376 011a 0393     		str	r3, [sp, #12]
 265:Core/Src/main.c **** 		  int iter = 0;
 377              		.loc 1 265 13 view .LVU82
 378 011c 0026     		movs	r6, #0
 379 011e 0027     		movs	r7, #0
 380 0120 0F94     		str	r4, [sp, #60]
 381 0122 0096     		str	r6, [sp]
 382 0124 0197     		str	r7, [sp, #4]
 383 0126 AB46     		mov	fp, r5
 268:Core/Src/main.c **** 			  int64_t xi2 = (xi*xi)/SCALE;
 384              		.loc 1 268 11 view .LVU83
 385 0128 96E7     		b	.L6
 386              	.LVL29:
 387              	.L14:
 268:Core/Src/main.c **** 			  int64_t xi2 = (xi*xi)/SCALE;
 388              		.loc 1 268 11 view .LVU84
 389              	.LBE11:
 390              	.LBE7:
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 391              		.loc 1 258 34 discriminator 2 view .LVU85
 392 012a AB46     		mov	fp, r5
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 393              		.loc 1 258 34 is_stmt 1 discriminator 2 view .LVU86
 394 012c 109B     		ldr	r3, [sp, #64]
 395 012e 0133     		adds	r3, r3, #1
 396 0130 1093     		str	r3, [sp, #64]
 397              	.LVL30:
 398              	.L5:
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 399              		.loc 1 258 21 discriminator 1 view .LVU87
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 400              		.loc 1 258 29 is_stmt 0 discriminator 1 view .LVU88
 401 0132 119B     		ldr	r3, [sp, #68]
 402 0134 013B     		subs	r3, r3, #1
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 403              		.loc 1 258 21 discriminator 1 view .LVU89
 404 0136 109A     		ldr	r2, [sp, #64]
 405 0138 9342     		cmp	r3, r2
 406 013a 05DD     		ble	.L15
 407              	.LBB12:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 408              		.loc 1 259 13 view .LVU90
 409 013c 0023     		movs	r3, #0
 410 013e 1C00     		movs	r4, r3
 411 0140 5D46     		mov	r5, fp
 412 0142 119B     		ldr	r3, [sp, #68]
 413 0144 9A46     		mov	r10, r3
 414 0146 BDE7     		b	.L11
 415              	.L15:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 416              		.loc 1 259 13 view .LVU91
 417              	.LBE12:
 418              	.LBE13:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 	  }
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 14


 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****     
 287:Core/Src/main.c ****     return mandelbrot_sum;
 419              		.loc 1 287 5 is_stmt 1 view .LVU92
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** }
 420              		.loc 1 289 1 is_stmt 0 view .LVU93
 421 0148 0C98     		ldr	r0, [sp, #48]
 422 014a 0D99     		ldr	r1, [sp, #52]
 423 014c 13B0     		add	sp, sp, #76
 424              		@ sp needed
 425              	.LVL31:
 426              	.LVL32:
 427              		.loc 1 289 1 view .LVU94
 428 014e F0BC     		pop	{r4, r5, r6, r7}
 429 0150 BB46     		mov	fp, r7
 430 0152 B246     		mov	r10, r6
 431 0154 A946     		mov	r9, r5
 432 0156 A046     		mov	r8, r4
 433 0158 F0BD     		pop	{r4, r5, r6, r7, pc}
 434              	.L17:
 435 015a C046     		.align	2
 436              	.L16:
 437 015c 20A10700 		.word	500000
 438 0160 40420F00 		.word	1000000
 439 0164 00093D00 		.word	4000000
 440 0168 E0673500 		.word	3500000
 441 016c 60DAD9FF 		.word	-2500000
 442 0170 80841E00 		.word	2000000
 443 0174 C0BDF0FF 		.word	-1000000
 444              		.cfi_endproc
 445              	.LFE43:
 447              		.global	__aeabi_i2d
 448              		.global	__aeabi_dmul
 449              		.global	__aeabi_ddiv
 450              		.global	__aeabi_dsub
 451              		.global	__aeabi_dadd
 452              		.global	__aeabi_dcmple
 453              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 454              		.align	1
 455              		.global	calculate_mandelbrot_double
 456              		.syntax unified
 457              		.code	16
 458              		.thumb_func
 460              	calculate_mandelbrot_double:
 461              	.LVL33:
 462              	.LFB44:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 292:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 463              		.loc 1 292 80 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 64
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		.loc 1 292 80 is_stmt 0 view .LVU96
 468 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 469              	.LCFI5:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 15


 470              		.cfi_def_cfa_offset 20
 471              		.cfi_offset 4, -20
 472              		.cfi_offset 5, -16
 473              		.cfi_offset 6, -12
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 DE46     		mov	lr, fp
 477 0004 5746     		mov	r7, r10
 478 0006 4E46     		mov	r6, r9
 479 0008 4546     		mov	r5, r8
 480 000a E0B5     		push	{r5, r6, r7, lr}
 481              	.LCFI6:
 482              		.cfi_def_cfa_offset 36
 483              		.cfi_offset 8, -36
 484              		.cfi_offset 9, -32
 485              		.cfi_offset 10, -28
 486              		.cfi_offset 11, -24
 487 000c 91B0     		sub	sp, sp, #68
 488              	.LCFI7:
 489              		.cfi_def_cfa_offset 104
 490 000e 0F91     		str	r1, [sp, #60]
 491 0010 9146     		mov	r9, r2
 293:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 492              		.loc 1 293 5 is_stmt 1 view .LVU97
 493              	.LVL34:
 294:Core/Src/main.c ****     //TODO: Complete the function implementation
 295:Core/Src/main.c ****     for (int y = 0; y < height-1; y++){
 494              		.loc 1 295 5 view .LVU98
 495              	.LBB14:
 496              		.loc 1 295 10 view .LVU99
 497              		.loc 1 295 14 is_stmt 0 view .LVU100
 498 0012 0023     		movs	r3, #0
 499 0014 0E93     		str	r3, [sp, #56]
 500              	.LBE14:
 293:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 501              		.loc 1 293 14 view .LVU101
 502 0016 0023     		movs	r3, #0
 503 0018 0024     		movs	r4, #0
 504 001a 0C93     		str	r3, [sp, #48]
 505 001c 0D94     		str	r4, [sp, #52]
 506 001e 0B90     		str	r0, [sp, #44]
 507              	.LBB20:
 508              		.loc 1 295 5 view .LVU102
 509 0020 8EE0     		b	.L19
 510              	.LVL35:
 511              	.L22:
 512              	.LBB15:
 513              	.LBB16:
 514              	.LBB17:
 296:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 297:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 298:Core/Src/main.c ****     		  // x0 = (x/width) * 3.5 - 2.5
 299:Core/Src/main.c ****     		  double x0 = ((double)x * 3.5 / width) - 2.5;
 300:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 301:Core/Src/main.c ****     		  double y0 = ((double)y * 2.0 / height) - 1.0;
 302:Core/Src/main.c ****     		  double xi = 0, yi =0;
 303:Core/Src/main.c ****     		  int iter = 0;
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 16


 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     		  while (iter< max_iterations && (xi*xi+yi*yi)<=4){
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     			  double temp = xi*xi-yi*yi;
 515              		.loc 1 307 10 is_stmt 1 view .LVU103
 516              		.loc 1 307 17 is_stmt 0 view .LVU104
 517 0022 029A     		ldr	r2, [sp, #8]
 518 0024 039B     		ldr	r3, [sp, #12]
 519 0026 0098     		ldr	r0, [sp]
 520 0028 0199     		ldr	r1, [sp, #4]
 521 002a FFF7FEFF 		bl	__aeabi_dsub
 522              	.LVL36:
 523 002e 0090     		str	r0, [sp]
 524 0030 0191     		str	r1, [sp, #4]
 525              	.LVL37:
 308:Core/Src/main.c ****     			  yi = (2*xi*yi)+y0;
 526              		.loc 1 308 10 is_stmt 1 view .LVU105
 527              		.loc 1 308 17 is_stmt 0 view .LVU106
 528 0032 3200     		movs	r2, r6
 529 0034 3B00     		movs	r3, r7
 530 0036 3000     		movs	r0, r6
 531              	.LVL38:
 532              		.loc 1 308 17 view .LVU107
 533 0038 3900     		movs	r1, r7
 534 003a FFF7FEFF 		bl	__aeabi_dadd
 535              	.LVL39:
 536              		.loc 1 308 20 view .LVU108
 537 003e 2200     		movs	r2, r4
 538 0040 2B00     		movs	r3, r5
 539 0042 FFF7FEFF 		bl	__aeabi_dmul
 540              	.LVL40:
 541              		.loc 1 308 13 view .LVU109
 542 0046 069A     		ldr	r2, [sp, #24]
 543 0048 079B     		ldr	r3, [sp, #28]
 544 004a FFF7FEFF 		bl	__aeabi_dadd
 545              	.LVL41:
 546 004e 0400     		movs	r4, r0
 547              	.LVL42:
 548              		.loc 1 308 13 view .LVU110
 549 0050 0D00     		movs	r5, r1
 550              	.LVL43:
 309:Core/Src/main.c ****     			  xi = temp + x0;
 551              		.loc 1 309 10 is_stmt 1 view .LVU111
 552              		.loc 1 309 13 is_stmt 0 view .LVU112
 553 0052 009A     		ldr	r2, [sp]
 554 0054 019B     		ldr	r3, [sp, #4]
 555 0056 0498     		ldr	r0, [sp, #16]
 556 0058 0599     		ldr	r1, [sp, #20]
 557 005a FFF7FEFF 		bl	__aeabi_dadd
 558              	.LVL44:
 559 005e 0600     		movs	r6, r0
 560              	.LVL45:
 561              		.loc 1 309 13 view .LVU113
 562 0060 0F00     		movs	r7, r1
 563              	.LVL46:
 310:Core/Src/main.c ****     			  iter++;
 564              		.loc 1 310 10 is_stmt 1 view .LVU114
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 17


 565              		.loc 1 310 14 is_stmt 0 view .LVU115
 566 0062 0123     		movs	r3, #1
 567 0064 9C46     		mov	ip, r3
 568 0066 E044     		add	r8, r8, ip
 569              	.LVL47:
 570              	.L20:
 571              		.loc 1 310 14 view .LVU116
 572              	.LBE17:
 305:Core/Src/main.c **** 
 573              		.loc 1 305 37 is_stmt 1 view .LVU117
 574 0068 C845     		cmp	r8, r9
 575 006a 1BDA     		bge	.L21
 305:Core/Src/main.c **** 
 576              		.loc 1 305 43 is_stmt 0 discriminator 1 view .LVU118
 577 006c 3200     		movs	r2, r6
 578 006e 3B00     		movs	r3, r7
 579 0070 3000     		movs	r0, r6
 580 0072 3900     		movs	r1, r7
 581 0074 FFF7FEFF 		bl	__aeabi_dmul
 582              	.LVL48:
 583 0078 0090     		str	r0, [sp]
 584 007a 0191     		str	r1, [sp, #4]
 305:Core/Src/main.c **** 
 585              		.loc 1 305 49 discriminator 1 view .LVU119
 586 007c 2200     		movs	r2, r4
 587 007e 2B00     		movs	r3, r5
 588 0080 2000     		movs	r0, r4
 589 0082 2900     		movs	r1, r5
 590 0084 FFF7FEFF 		bl	__aeabi_dmul
 591              	.LVL49:
 592 0088 0200     		movs	r2, r0
 593 008a 0B00     		movs	r3, r1
 594 008c 0292     		str	r2, [sp, #8]
 595 008e 0393     		str	r3, [sp, #12]
 305:Core/Src/main.c **** 
 596              		.loc 1 305 46 discriminator 1 view .LVU120
 597 0090 0098     		ldr	r0, [sp]
 598 0092 0199     		ldr	r1, [sp, #4]
 599 0094 FFF7FEFF 		bl	__aeabi_dadd
 600              	.LVL50:
 305:Core/Src/main.c **** 
 601              		.loc 1 305 37 discriminator 1 view .LVU121
 602 0098 0022     		movs	r2, #0
 603 009a 354B     		ldr	r3, .L28
 604 009c FFF7FEFF 		bl	__aeabi_dcmple
 605              	.LVL51:
 606 00a0 0028     		cmp	r0, #0
 607 00a2 BED1     		bne	.L22
 608              	.L21:
 311:Core/Src/main.c ****     		  }
 312:Core/Src/main.c ****     		  mandelbrot_sum = mandelbrot_sum + iter;
 609              		.loc 1 312 9 is_stmt 1 view .LVU122
 610              		.loc 1 312 41 is_stmt 0 view .LVU123
 611 00a4 4346     		mov	r3, r8
 612 00a6 0893     		str	r3, [sp, #32]
 613 00a8 DB17     		asrs	r3, r3, #31
 614 00aa 0993     		str	r3, [sp, #36]
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 18


 615              		.loc 1 312 24 view .LVU124
 616 00ac 0C9B     		ldr	r3, [sp, #48]
 617 00ae 0D9C     		ldr	r4, [sp, #52]
 618 00b0 0899     		ldr	r1, [sp, #32]
 619 00b2 099A     		ldr	r2, [sp, #36]
 620 00b4 5B18     		adds	r3, r3, r1
 621 00b6 5441     		adcs	r4, r4, r2
 622 00b8 0C93     		str	r3, [sp, #48]
 623 00ba 0D94     		str	r4, [sp, #52]
 624              	.LVL52:
 625              		.loc 1 312 24 view .LVU125
 626              	.LBE16:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 627              		.loc 1 296 38 is_stmt 1 discriminator 2 view .LVU126
 628 00bc 0A9B     		ldr	r3, [sp, #40]
 629              	.LVL53:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 630              		.loc 1 296 38 is_stmt 0 discriminator 2 view .LVU127
 631 00be 0133     		adds	r3, r3, #1
 632 00c0 0A93     		str	r3, [sp, #40]
 633              	.LVL54:
 634              	.L24:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 635              		.loc 1 296 26 is_stmt 1 discriminator 1 view .LVU128
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 636              		.loc 1 296 33 is_stmt 0 discriminator 1 view .LVU129
 637 00c2 0B9B     		ldr	r3, [sp, #44]
 638 00c4 013B     		subs	r3, r3, #1
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 639              		.loc 1 296 26 discriminator 1 view .LVU130
 640 00c6 0A9A     		ldr	r2, [sp, #40]
 641 00c8 9342     		cmp	r3, r2
 642 00ca 36DD     		ble	.L26
 643              	.LBB18:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 644              		.loc 1 299 9 is_stmt 1 view .LVU131
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 645              		.loc 1 299 22 is_stmt 0 view .LVU132
 646 00cc 0A98     		ldr	r0, [sp, #40]
 647 00ce FFF7FEFF 		bl	__aeabi_i2d
 648              	.LVL55:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 649              		.loc 1 299 32 view .LVU133
 650 00d2 0022     		movs	r2, #0
 651 00d4 274B     		ldr	r3, .L28+4
 652 00d6 FFF7FEFF 		bl	__aeabi_dmul
 653              	.LVL56:
 654 00da 0400     		movs	r4, r0
 655 00dc 0D00     		movs	r5, r1
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 656              		.loc 1 299 38 view .LVU134
 657 00de 0B98     		ldr	r0, [sp, #44]
 658 00e0 FFF7FEFF 		bl	__aeabi_i2d
 659              	.LVL57:
 660 00e4 0200     		movs	r2, r0
 661 00e6 0B00     		movs	r3, r1
 662 00e8 2000     		movs	r0, r4
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 19


 663 00ea 2900     		movs	r1, r5
 664 00ec FFF7FEFF 		bl	__aeabi_ddiv
 665              	.LVL58:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 666              		.loc 1 299 16 view .LVU135
 667 00f0 0022     		movs	r2, #0
 668 00f2 214B     		ldr	r3, .L28+8
 669 00f4 FFF7FEFF 		bl	__aeabi_dsub
 670              	.LVL59:
 671 00f8 0490     		str	r0, [sp, #16]
 672 00fa 0591     		str	r1, [sp, #20]
 673              	.LVL60:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 674              		.loc 1 301 9 is_stmt 1 view .LVU136
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 675              		.loc 1 301 22 is_stmt 0 view .LVU137
 676 00fc 5846     		mov	r0, fp
 677              	.LVL61:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 678              		.loc 1 301 22 view .LVU138
 679 00fe FFF7FEFF 		bl	__aeabi_i2d
 680              	.LVL62:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 681              		.loc 1 301 32 view .LVU139
 682 0102 0200     		movs	r2, r0
 683 0104 0B00     		movs	r3, r1
 684 0106 FFF7FEFF 		bl	__aeabi_dadd
 685              	.LVL63:
 686 010a 0400     		movs	r4, r0
 687 010c 0D00     		movs	r5, r1
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 688              		.loc 1 301 38 view .LVU140
 689 010e 5046     		mov	r0, r10
 690 0110 FFF7FEFF 		bl	__aeabi_i2d
 691              	.LVL64:
 692 0114 0200     		movs	r2, r0
 693 0116 0B00     		movs	r3, r1
 694 0118 2000     		movs	r0, r4
 695 011a 2900     		movs	r1, r5
 696 011c FFF7FEFF 		bl	__aeabi_ddiv
 697              	.LVL65:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 698              		.loc 1 301 16 view .LVU141
 699 0120 0022     		movs	r2, #0
 700 0122 164B     		ldr	r3, .L28+12
 701 0124 FFF7FEFF 		bl	__aeabi_dsub
 702              	.LVL66:
 703 0128 0690     		str	r0, [sp, #24]
 704 012a 0791     		str	r1, [sp, #28]
 705              	.LVL67:
 302:Core/Src/main.c ****     		  int iter = 0;
 706              		.loc 1 302 9 is_stmt 1 view .LVU142
 303:Core/Src/main.c **** 
 707              		.loc 1 303 9 view .LVU143
 305:Core/Src/main.c **** 
 708              		.loc 1 305 9 view .LVU144
 303:Core/Src/main.c **** 
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 20


 709              		.loc 1 303 13 is_stmt 0 view .LVU145
 710 012c 0023     		movs	r3, #0
 711 012e 9846     		mov	r8, r3
 302:Core/Src/main.c ****     		  int iter = 0;
 712              		.loc 1 302 24 view .LVU146
 713 0130 0024     		movs	r4, #0
 714 0132 0025     		movs	r5, #0
 302:Core/Src/main.c ****     		  int iter = 0;
 715              		.loc 1 302 16 view .LVU147
 716 0134 2600     		movs	r6, r4
 717 0136 2F00     		movs	r7, r5
 305:Core/Src/main.c **** 
 718              		.loc 1 305 15 view .LVU148
 719 0138 96E7     		b	.L20
 720              	.LVL68:
 721              	.L26:
 305:Core/Src/main.c **** 
 722              		.loc 1 305 15 view .LVU149
 723              	.LBE18:
 724              	.LBE15:
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 725              		.loc 1 295 36 is_stmt 1 discriminator 2 view .LVU150
 726 013a 0E9B     		ldr	r3, [sp, #56]
 727 013c 0133     		adds	r3, r3, #1
 728 013e 0E93     		str	r3, [sp, #56]
 729              	.LVL69:
 730              	.L19:
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 731              		.loc 1 295 23 discriminator 1 view .LVU151
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 732              		.loc 1 295 31 is_stmt 0 discriminator 1 view .LVU152
 733 0140 0F9B     		ldr	r3, [sp, #60]
 734 0142 013B     		subs	r3, r3, #1
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 735              		.loc 1 295 23 discriminator 1 view .LVU153
 736 0144 0E9A     		ldr	r2, [sp, #56]
 737 0146 9342     		cmp	r3, r2
 738 0148 08DD     		ble	.L27
 739              	.LBB19:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 740              		.loc 1 296 17 view .LVU154
 741 014a 0023     		movs	r3, #0
 742 014c 9A46     		mov	r10, r3
 743 014e 0E9B     		ldr	r3, [sp, #56]
 744 0150 9B46     		mov	fp, r3
 745 0152 5346     		mov	r3, r10
 746 0154 0A93     		str	r3, [sp, #40]
 747 0156 0F9B     		ldr	r3, [sp, #60]
 748 0158 9A46     		mov	r10, r3
 749 015a B2E7     		b	.L24
 750              	.LVL70:
 751              	.L27:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 752              		.loc 1 296 17 view .LVU155
 753              	.LBE19:
 754              	.LBE20:
 313:Core/Src/main.c ****     	  }
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 21


 314:Core/Src/main.c ****       }
 315:Core/Src/main.c ****     
 316:Core/Src/main.c ****     return mandelbrot_sum;
 755              		.loc 1 316 5 is_stmt 1 view .LVU156
 317:Core/Src/main.c **** }
 756              		.loc 1 317 1 is_stmt 0 view .LVU157
 757 015c 0C98     		ldr	r0, [sp, #48]
 758 015e 0D99     		ldr	r1, [sp, #52]
 759 0160 11B0     		add	sp, sp, #68
 760              		@ sp needed
 761              	.LVL71:
 762              		.loc 1 317 1 view .LVU158
 763 0162 F0BC     		pop	{r4, r5, r6, r7}
 764 0164 BB46     		mov	fp, r7
 765 0166 B246     		mov	r10, r6
 766 0168 A946     		mov	r9, r5
 767 016a A046     		mov	r8, r4
 768 016c F0BD     		pop	{r4, r5, r6, r7, pc}
 769              	.L29:
 770 016e C046     		.align	2
 771              	.L28:
 772 0170 00001040 		.word	1074790400
 773 0174 00000C40 		.word	1074528256
 774 0178 00000440 		.word	1074003968
 775 017c 0000F03F 		.word	1072693248
 776              		.cfi_endproc
 777              	.LFE44:
 779              		.section	.text.Error_Handler,"ax",%progbits
 780              		.align	1
 781              		.global	Error_Handler
 782              		.syntax unified
 783              		.code	16
 784              		.thumb_func
 786              	Error_Handler:
 787              	.LFB45:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /* USER CODE END 4 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
 322:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** void Error_Handler(void)
 326:Core/Src/main.c **** {
 788              		.loc 1 326 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ Volatile: function does not return.
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 327:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 328:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 329:Core/Src/main.c ****   __disable_irq();
 794              		.loc 1 329 3 view .LVU160
 795              	.LBB21:
 796              	.LBI21:
 797              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 22


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 23


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 24


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 798              		.loc 2 140 27 view .LVU161
 799              	.LBB22:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 800              		.loc 2 142 3 view .LVU162
 801              		.syntax divided
 802              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 803 0000 72B6     		cpsid i
 804              	@ 0 "" 2
 805              		.thumb
 806              		.syntax unified
 807              	.L31:
 808              	.LBE22:
 809              	.LBE21:
 330:Core/Src/main.c ****   while (1)
 810              		.loc 1 330 3 view .LVU163
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****   }
 811              		.loc 1 332 3 view .LVU164
 330:Core/Src/main.c ****   while (1)
 812              		.loc 1 330 9 view .LVU165
 813 0002 FEE7     		b	.L31
 814              		.cfi_endproc
 815              	.LFE45:
 817              		.section	.text.SystemClock_Config,"ax",%progbits
 818              		.align	1
 819              		.global	SystemClock_Config
 820              		.syntax unified
 821              		.code	16
 822              		.thumb_func
 824              	SystemClock_Config:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 25


 825              	.LFB41:
 192:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 826              		.loc 1 192 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 64
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830 0000 00B5     		push	{lr}
 831              	.LCFI8:
 832              		.cfi_def_cfa_offset 4
 833              		.cfi_offset 14, -4
 834 0002 91B0     		sub	sp, sp, #68
 835              	.LCFI9:
 836              		.cfi_def_cfa_offset 72
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 837              		.loc 1 193 3 view .LVU167
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 838              		.loc 1 193 22 is_stmt 0 view .LVU168
 839 0004 3022     		movs	r2, #48
 840 0006 0021     		movs	r1, #0
 841 0008 04A8     		add	r0, sp, #16
 842 000a FFF7FEFF 		bl	memset
 843              	.LVL72:
 194:Core/Src/main.c **** 
 844              		.loc 1 194 3 is_stmt 1 view .LVU169
 194:Core/Src/main.c **** 
 845              		.loc 1 194 22 is_stmt 0 view .LVU170
 846 000e 1022     		movs	r2, #16
 847 0010 0021     		movs	r1, #0
 848 0012 6846     		mov	r0, sp
 849 0014 FFF7FEFF 		bl	memset
 850              	.LVL73:
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 851              		.loc 1 199 3 is_stmt 1 view .LVU171
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 852              		.loc 1 199 36 is_stmt 0 view .LVU172
 853 0018 0223     		movs	r3, #2
 854 001a 0493     		str	r3, [sp, #16]
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 855              		.loc 1 200 3 is_stmt 1 view .LVU173
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 856              		.loc 1 200 30 is_stmt 0 view .LVU174
 857 001c 013B     		subs	r3, r3, #1
 858 001e 0793     		str	r3, [sp, #28]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 859              		.loc 1 201 3 is_stmt 1 view .LVU175
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 860              		.loc 1 201 41 is_stmt 0 view .LVU176
 861 0020 0F33     		adds	r3, r3, #15
 862 0022 0893     		str	r3, [sp, #32]
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 863              		.loc 1 202 3 is_stmt 1 view .LVU177
 203:Core/Src/main.c ****   {
 864              		.loc 1 203 3 view .LVU178
 203:Core/Src/main.c ****   {
 865              		.loc 1 203 7 is_stmt 0 view .LVU179
 866 0024 04A8     		add	r0, sp, #16
 867 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 26


 868              	.LVL74:
 203:Core/Src/main.c ****   {
 869              		.loc 1 203 6 discriminator 1 view .LVU180
 870 002a 0028     		cmp	r0, #0
 871 002c 0DD1     		bne	.L35
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 872              		.loc 1 210 3 is_stmt 1 view .LVU181
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 873              		.loc 1 210 31 is_stmt 0 view .LVU182
 874 002e 0723     		movs	r3, #7
 875 0030 0093     		str	r3, [sp]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 876              		.loc 1 212 3 is_stmt 1 view .LVU183
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 877              		.loc 1 212 34 is_stmt 0 view .LVU184
 878 0032 0023     		movs	r3, #0
 879 0034 0193     		str	r3, [sp, #4]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 880              		.loc 1 213 3 is_stmt 1 view .LVU185
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 881              		.loc 1 213 35 is_stmt 0 view .LVU186
 882 0036 0293     		str	r3, [sp, #8]
 214:Core/Src/main.c **** 
 883              		.loc 1 214 3 is_stmt 1 view .LVU187
 214:Core/Src/main.c **** 
 884              		.loc 1 214 36 is_stmt 0 view .LVU188
 885 0038 0393     		str	r3, [sp, #12]
 216:Core/Src/main.c ****   {
 886              		.loc 1 216 3 is_stmt 1 view .LVU189
 216:Core/Src/main.c ****   {
 887              		.loc 1 216 7 is_stmt 0 view .LVU190
 888 003a 0021     		movs	r1, #0
 889 003c 6846     		mov	r0, sp
 890 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 891              	.LVL75:
 216:Core/Src/main.c ****   {
 892              		.loc 1 216 6 discriminator 1 view .LVU191
 893 0042 0028     		cmp	r0, #0
 894 0044 03D1     		bne	.L36
 220:Core/Src/main.c **** 
 895              		.loc 1 220 1 view .LVU192
 896 0046 11B0     		add	sp, sp, #68
 897              		@ sp needed
 898 0048 00BD     		pop	{pc}
 899              	.L35:
 205:Core/Src/main.c ****   }
 900              		.loc 1 205 5 is_stmt 1 view .LVU193
 901 004a FFF7FEFF 		bl	Error_Handler
 902              	.LVL76:
 903              	.L36:
 218:Core/Src/main.c ****   }
 904              		.loc 1 218 5 view .LVU194
 905 004e FFF7FEFF 		bl	Error_Handler
 906              	.LVL77:
 907              		.cfi_endproc
 908              	.LFE41:
 910              		.section	.text.main,"ax",%progbits
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 27


 911              		.align	1
 912              		.global	main
 913              		.syntax unified
 914              		.code	16
 915              		.thumb_func
 917              	main:
 918              	.LFB40:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 919              		.loc 1 90 1 view -0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 924              	.LCFI10:
 925              		.cfi_def_cfa_offset 24
 926              		.cfi_offset 3, -24
 927              		.cfi_offset 4, -20
 928              		.cfi_offset 5, -16
 929              		.cfi_offset 6, -12
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
 932              		.loc 1 98 3 view .LVU196
 933 0002 FFF7FEFF 		bl	HAL_Init
 934              	.LVL78:
 105:Core/Src/main.c **** 
 935              		.loc 1 105 3 view .LVU197
 936 0006 FFF7FEFF 		bl	SystemClock_Config
 937              	.LVL79:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 938              		.loc 1 112 3 view .LVU198
 939 000a FFF7FEFF 		bl	MX_GPIO_Init
 940              	.LVL80:
 115:Core/Src/main.c **** 
 941              		.loc 1 115 3 view .LVU199
 942 000e 0122     		movs	r2, #1
 943 0010 0121     		movs	r1, #1
 944 0012 1E48     		ldr	r0, .L41
 945 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 946              	.LVL81:
 131:Core/Src/main.c **** 
 947              		.loc 1 131 3 view .LVU200
 135:Core/Src/main.c ****           // Record start time
 948              		.loc 1 135 7 view .LVU201
 949              	.LBB23:
 135:Core/Src/main.c ****           // Record start time
 950              		.loc 1 135 12 view .LVU202
 135:Core/Src/main.c ****           // Record start time
 951              		.loc 1 135 16 is_stmt 0 view .LVU203
 952 0018 0024     		movs	r4, #0
 135:Core/Src/main.c ****           // Record start time
 953              		.loc 1 135 7 view .LVU204
 954 001a 2EE0     		b	.L38
 955              	.LVL82:
 956              	.L39:
 137:Core/Src/main.c **** 
 957              		.loc 1 137 11 is_stmt 1 view .LVU205
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 28


 137:Core/Src/main.c **** 
 958              		.loc 1 137 24 is_stmt 0 view .LVU206
 959 001c FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL83:
 137:Core/Src/main.c **** 
 961              		.loc 1 137 22 discriminator 1 view .LVU207
 962 0020 1B4F     		ldr	r7, .L41+4
 963 0022 3860     		str	r0, [r7]
 140:Core/Src/main.c **** 
 964              		.loc 1 140 11 is_stmt 1 view .LVU208
 140:Core/Src/main.c **** 
 965              		.loc 1 140 23 is_stmt 0 view .LVU209
 966 0024 1B4B     		ldr	r3, .L41+8
 967 0026 A500     		lsls	r5, r4, #2
 968 0028 E858     		ldr	r0, [r5, r3]
 969 002a 6422     		movs	r2, #100
 970 002c 0100     		movs	r1, r0
 971 002e FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 972              	.LVL84:
 140:Core/Src/main.c **** 
 973              		.loc 1 140 21 discriminator 1 view .LVU210
 974 0032 194E     		ldr	r6, .L41+12
 975 0034 3060     		str	r0, [r6]
 976 0036 7160     		str	r1, [r6, #4]
 143:Core/Src/main.c **** 
 977              		.loc 1 143 11 is_stmt 1 view .LVU211
 143:Core/Src/main.c **** 
 978              		.loc 1 143 22 is_stmt 0 view .LVU212
 979 0038 FFF7FEFF 		bl	HAL_GetTick
 980              	.LVL85:
 143:Core/Src/main.c **** 
 981              		.loc 1 143 20 discriminator 1 view .LVU213
 982 003c 174B     		ldr	r3, .L41+16
 983 003e 1860     		str	r0, [r3]
 145:Core/Src/main.c **** 
 984              		.loc 1 145 11 is_stmt 1 view .LVU214
 145:Core/Src/main.c **** 
 985              		.loc 1 145 37 is_stmt 0 view .LVU215
 986 0040 3B68     		ldr	r3, [r7]
 987 0042 C01A     		subs	r0, r0, r3
 145:Core/Src/main.c **** 
 988              		.loc 1 145 26 view .LVU216
 989 0044 164B     		ldr	r3, .L41+20
 990 0046 1860     		str	r0, [r3]
 148:Core/Src/main.c ****           exec_times[i] = execution_time;
 991              		.loc 1 148 11 is_stmt 1 view .LVU217
 148:Core/Src/main.c ****           exec_times[i] = execution_time;
 992              		.loc 1 148 24 is_stmt 0 view .LVU218
 993 0048 164B     		ldr	r3, .L41+24
 994 004a E100     		lsls	r1, r4, #3
 995 004c 5918     		adds	r1, r3, r1
 996 004e 3268     		ldr	r2, [r6]
 997 0050 7368     		ldr	r3, [r6, #4]
 998 0052 0A60     		str	r2, [r1]
 999 0054 4B60     		str	r3, [r1, #4]
 149:Core/Src/main.c **** 
 1000              		.loc 1 149 11 is_stmt 1 view .LVU219
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 29


 149:Core/Src/main.c **** 
 1001              		.loc 1 149 25 is_stmt 0 view .LVU220
 1002 0056 144B     		ldr	r3, .L41+28
 1003 0058 E850     		str	r0, [r5, r3]
 152:Core/Src/main.c **** 
 1004              		.loc 1 152 11 is_stmt 1 view .LVU221
 1005 005a 0C4D     		ldr	r5, .L41
 1006 005c 0122     		movs	r2, #1
 1007 005e 0121     		movs	r1, #1
 1008 0060 2800     		movs	r0, r5
 1009 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1010              	.LVL86:
 155:Core/Src/main.c **** 
 1011              		.loc 1 155 11 view .LVU222
 1012 0066 FA20     		movs	r0, #250
 1013 0068 8000     		lsls	r0, r0, #2
 1014 006a FFF7FEFF 		bl	HAL_Delay
 1015              	.LVL87:
 158:Core/Src/main.c ****       }
 1016              		.loc 1 158 11 view .LVU223
 1017 006e 0022     		movs	r2, #0
 1018 0070 0121     		movs	r1, #1
 1019 0072 2800     		movs	r0, r5
 1020 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1021              	.LVL88:
 135:Core/Src/main.c ****           // Record start time
 1022              		.loc 1 135 39 discriminator 3 view .LVU224
 1023 0078 0134     		adds	r4, r4, #1
 1024              	.LVL89:
 1025              	.L38:
 135:Core/Src/main.c ****           // Record start time
 1026              		.loc 1 135 25 discriminator 1 view .LVU225
 1027 007a 042C     		cmp	r4, #4
 1028 007c CEDD     		ble	.L39
 1029              	.LBE23:
 162:Core/Src/main.c ****   
 1030              		.loc 1 162 7 view .LVU226
 1031 007e 0022     		movs	r2, #0
 1032 0080 0121     		movs	r1, #1
 1033 0082 0248     		ldr	r0, .L41
 1034 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1035              	.LVL90:
 1036              	.L40:
 178:Core/Src/main.c ****   {
 1037              		.loc 1 178 3 view .LVU227
 183:Core/Src/main.c ****   /* USER CODE END 3 */
 1038              		.loc 1 183 3 view .LVU228
 178:Core/Src/main.c ****   {
 1039              		.loc 1 178 9 view .LVU229
 1040 0088 FEE7     		b	.L40
 1041              	.L42:
 1042 008a C046     		.align	2
 1043              	.L41:
 1044 008c 00040048 		.word	1207960576
 1045 0090 00000000 		.word	start_time
 1046 0094 00000000 		.word	dim
 1047 0098 00000000 		.word	check_sum
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 30


 1048 009c 00000000 		.word	end_time
 1049 00a0 00000000 		.word	execution_time
 1050 00a4 00000000 		.word	checksums
 1051 00a8 00000000 		.word	exec_times
 1052              		.cfi_endproc
 1053              	.LFE40:
 1055              		.global	exec_times
 1056              		.section	.bss.exec_times,"aw",%nobits
 1057              		.align	2
 1060              	exec_times:
 1061 0000 00000000 		.space	20
 1061      00000000 
 1061      00000000 
 1061      00000000 
 1061      00000000 
 1062              		.global	checksums
 1063              		.section	.bss.checksums,"aw",%nobits
 1064              		.align	3
 1067              	checksums:
 1068 0000 00000000 		.space	40
 1068      00000000 
 1068      00000000 
 1068      00000000 
 1068      00000000 
 1069              		.global	check_sum
 1070              		.section	.bss.check_sum,"aw",%nobits
 1071              		.align	3
 1074              	check_sum:
 1075 0000 00000000 		.space	8
 1075      00000000 
 1076              		.global	execution_time
 1077              		.section	.bss.execution_time,"aw",%nobits
 1078              		.align	2
 1081              	execution_time:
 1082 0000 00000000 		.space	4
 1083              		.global	end_time
 1084              		.section	.bss.end_time,"aw",%nobits
 1085              		.align	2
 1088              	end_time:
 1089 0000 00000000 		.space	4
 1090              		.global	start_time
 1091              		.section	.bss.start_time,"aw",%nobits
 1092              		.align	2
 1095              	start_time:
 1096 0000 00000000 		.space	4
 1097              		.global	dim
 1098              		.section	.data.dim,"aw"
 1099              		.align	2
 1102              	dim:
 1103 0000 80000000 		.word	128
 1104 0004 A0000000 		.word	160
 1105 0008 C0000000 		.word	192
 1106 000c E0000000 		.word	224
 1107 0010 00010000 		.word	256
 1108              		.text
 1109              	.Letext0:
 1110              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 31


 1111              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1112              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1113              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1114              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1115              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1116              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1117              		.file 10 "<built-in>"
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccirU43I.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:437    .text.calculate_mandelbrot_fixed_point_arithmetic:0000015c $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:454    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:460    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:772    .text.calculate_mandelbrot_double:00000170 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:780    .text.Error_Handler:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:786    .text.Error_Handler:00000000 Error_Handler
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:818    .text.SystemClock_Config:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:824    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:911    .text.main:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:917    .text.main:00000000 main
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1044   .text.main:0000008c $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1095   .bss.start_time:00000000 start_time
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1102   .data.dim:00000000 dim
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1074   .bss.check_sum:00000000 check_sum
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1088   .bss.end_time:00000000 end_time
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1081   .bss.execution_time:00000000 execution_time
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1067   .bss.checksums:00000000 checksums
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1060   .bss.exec_times:00000000 exec_times
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1057   .bss.exec_times:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1064   .bss.checksums:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1071   .bss.check_sum:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1078   .bss.execution_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1085   .bss.end_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1092   .bss.start_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccirU43I.s:1099   .data.dim:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_ldivmod
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
