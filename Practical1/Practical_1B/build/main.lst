ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** 
   3:Core/Src/main.c **** /* SMTJOS022 X BHYEBR002 EEE3096S Practical 1B*/
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** /**
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @file           : main.c
   8:Core/Src/main.c ****   * @brief          : Main program body
   9:Core/Src/main.c ****   ******************************************************************************
  10:Core/Src/main.c ****   * @attention
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  13:Core/Src/main.c ****   * All rights reserved.
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  16:Core/Src/main.c ****   * in the root directory of this software component.
  17:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  18:Core/Src/main.c ****   *
  19:Core/Src/main.c ****   ******************************************************************************
  20:Core/Src/main.c ****   */
  21:Core/Src/main.c **** /* USER CODE END Header */
  22:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  23:Core/Src/main.c **** #include "main.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdint.h>
  28:Core/Src/main.c **** #include "stm32f0xx.h"
  29:Core/Src/main.c **** //#include <lcd_stm32f0.c>
  30:Core/Src/main.c **** #include <stdlib.h>
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** #define MAX_ITER 100
  36:Core/Src/main.c **** #define SCALE 1000000
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****  int dim[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c ****  uint32_t  start_time=0, end_time=0, execution_time=0;
  56:Core/Src/main.c ****  uint32_t check_sum=0;
  57:Core/Src/main.c ****  uint32_t checksums[5];
  58:Core/Src/main.c ****  uint32_t exec_times[5];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /*
  61:Core/Src/main.c ****   start_time
  62:Core/Src/main.c ****   end_time
  63:Core/Src/main.c ****   execution_time 
  64:Core/Src/main.c ****   checksum: should be uint64_t
  65:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  66:Core/Src/main.c **** */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  75:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 115:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   //TODO: Record the start time
 119:Core/Src/main.c ****   //start_time = HAL_Get_Tick();
 120:Core/Src/main.c ****   
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 123:Core/Src/main.c ****   //check_sum = calculate_mandelbrot_fixed_point_arithmetic(dim[0], dim[0], MAX_ITER);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Record the end time
 126:Core/Src/main.c ****   //end_time = HAL_Get_Tick();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   //TODO: Calculate the execution time
 129:Core/Src/main.c ****   //execution_time = end_time - start_time;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   const int num_sizes = sizeof(dim) / sizeof(dim[0]);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****       // Arrays to hold results for viewing in debugger
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****       for (int i = 0; i < num_sizes; i++) {
 136:Core/Src/main.c ****           // Record start time
 137:Core/Src/main.c ****           start_time = HAL_GetTick();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****           // Run fixed-point Mandelbrot with square image dim[i] x dim[i]
 140:Core/Src/main.c ****           check_sum = calculate_mandelbrot_fixed_point_arithmetic(dim[i], dim[i], MAX_ITER);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****           // Record end time
 143:Core/Src/main.c ****           end_time = HAL_GetTick();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****           execution_time = end_time - start_time;
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****           // Store results
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 4


 148:Core/Src/main.c ****           checksums[i] = check_sum;
 149:Core/Src/main.c ****           exec_times[i] = execution_time;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****           // Toggle LED1 on to signal completion of this run
 152:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****           // Hold LEDs on for 1 second
 155:Core/Src/main.c ****           HAL_Delay(1000);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****           // Turn off LED1 before next run
 158:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 159:Core/Src/main.c ****       }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****       // Turn off LED0 after all runs done
 162:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 163:Core/Src/main.c ****   
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 169:Core/Src/main.c ****   
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   //TODO: Turn off the LEDs
 172:Core/Src/main.c ****   
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END 2 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* Infinite loop */
 177:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 178:Core/Src/main.c ****   while (1)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     /* USER CODE END WHILE */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   /* USER CODE END 3 */
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief System Clock Configuration
 189:Core/Src/main.c ****   * @retval None
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** void SystemClock_Config(void)
 192:Core/Src/main.c **** {
 193:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 194:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 197:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204:Core/Src/main.c ****   {
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 5


 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief GPIO Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** static void MX_GPIO_Init(void)
 228:Core/Src/main.c **** {
  26              		.loc 1 228 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 229:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 229 3 view .LVU1
  39              		.loc 1 229 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 230:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 231:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 234:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 234 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 234 3 view .LVU4
  48              		.loc 1 234 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 6


  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 234 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 234 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 234 3 view .LVU8
 235:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 235 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 235 3 view .LVU10
  66              		.loc 1 235 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 235 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 235 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 235 3 view .LVU14
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 238 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 241:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 241 3 view .LVU16
  88              		.loc 1 241 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 242:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 242 3 is_stmt 1 view .LVU18
  92              		.loc 1 242 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 243:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 243 3 is_stmt 1 view .LVU20
  96              		.loc 1 243 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 244:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 244 3 is_stmt 1 view .LVU22
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 7


 100              		.loc 1 244 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 245:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 245 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 248:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 249:Core/Src/main.c **** }
 107              		.loc 1 249 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_lmul
 120              		.global	__aeabi_ldivmod
 121              		.global	__aeabi_idiv
 122              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 123              		.align	1
 124              		.global	calculate_mandelbrot_fixed_point_arithmetic
 125              		.syntax unified
 126              		.code	16
 127              		.thumb_func
 129              	calculate_mandelbrot_fixed_point_arithmetic:
 130              	.LVL3:
 131              	.LFB43:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 252:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 253:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 132              		.loc 1 253 96 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 32
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		.loc 1 253 96 is_stmt 0 view .LVU27
 137 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 138              	.LCFI2:
 139              		.cfi_def_cfa_offset 20
 140              		.cfi_offset 4, -20
 141              		.cfi_offset 5, -16
 142              		.cfi_offset 6, -12
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 DE46     		mov	lr, fp
 146 0004 5746     		mov	r7, r10
 147 0006 4E46     		mov	r6, r9
 148 0008 4546     		mov	r5, r8
 149 000a E0B5     		push	{r5, r6, r7, lr}
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 8


 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 36
 152              		.cfi_offset 8, -36
 153              		.cfi_offset 9, -32
 154              		.cfi_offset 10, -28
 155              		.cfi_offset 11, -24
 156 000c 89B0     		sub	sp, sp, #36
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 72
 159 000e 8246     		mov	r10, r0
 160 0010 0792     		str	r2, [sp, #28]
 254:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 254 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 255:Core/Src/main.c ****     //TODO: Complete the function implementation
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   for (int y = 0; y < height-1; y++){
 163              		.loc 1 258 3 view .LVU29
 164              	.LBB6:
 165              		.loc 1 258 8 view .LVU30
 166              		.loc 1 258 12 is_stmt 0 view .LVU31
 167 0012 0023     		movs	r3, #0
 168 0014 0593     		str	r3, [sp, #20]
 169              	.LBE6:
 254:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 170              		.loc 1 254 12 view .LVU32
 171 0016 0022     		movs	r2, #0
 172              	.LVL5:
 254:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 173              		.loc 1 254 12 view .LVU33
 174 0018 0023     		movs	r3, #0
 175 001a 0292     		str	r2, [sp, #8]
 176 001c 0393     		str	r3, [sp, #12]
 177 001e 0691     		str	r1, [sp, #24]
 178              	.LBB13:
 179              		.loc 1 258 3 view .LVU34
 180 0020 51E0     		b	.L5
 181              	.LVL6:
 182              	.L12:
 183              	.LBB7:
 184              	.LBB8:
 185              	.LBB9:
 259:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 260:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 261:Core/Src/main.c **** 		  // x0 = (x/width) * 3.5 - 2.5
 262:Core/Src/main.c **** 		  int32_t x0 = ((int64_t)x * 3500000 / width) - 2500000;
 263:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 264:Core/Src/main.c **** 		  int32_t y0 = ((int64_t)y * 2000000 / height) - 1000000;
 265:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 266:Core/Src/main.c **** 		  int iter = 0;
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 		  while (iter< max_iterations){
 269:Core/Src/main.c **** 			  int32_t xi2 = (xi*xi)/SCALE;
 270:Core/Src/main.c **** 			  int32_t yi2 = (yi*yi)/SCALE;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 			  if (xi2 + yi2 > 4 * SCALE) {
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 9


 273:Core/Src/main.c ****                   break;
 274:Core/Src/main.c ****               }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** 			  int32_t temp = xi2-yi2;
 186              		.loc 1 277 6 is_stmt 1 view .LVU35
 187              		.loc 1 277 14 is_stmt 0 view .LVU36
 188 0022 241A     		subs	r4, r4, r0
 189              	.LVL7:
 278:Core/Src/main.c **** 			  yi = (2*xi*yi)/SCALE+y0;
 190              		.loc 1 278 6 is_stmt 1 view .LVU37
 191              		.loc 1 278 16 is_stmt 0 view .LVU38
 192 0024 3000     		movs	r0, r6
 193              	.LVL8:
 194              		.loc 1 278 16 view .LVU39
 195 0026 6843     		muls	r0, r5
 196              		.loc 1 278 20 view .LVU40
 197 0028 3149     		ldr	r1, .L15
 198 002a FFF7FEFF 		bl	__aeabi_idiv
 199              	.LVL9:
 200              		.loc 1 278 9 view .LVU41
 201 002e 4044     		add	r0, r0, r8
 202 0030 0600     		movs	r6, r0
 203              	.LVL10:
 279:Core/Src/main.c **** 			  xi = temp + x0;
 204              		.loc 1 279 6 is_stmt 1 view .LVU42
 205              		.loc 1 279 9 is_stmt 0 view .LVU43
 206 0032 4C44     		add	r4, r4, r9
 207              	.LVL11:
 208              		.loc 1 279 9 view .LVU44
 209 0034 2500     		movs	r5, r4
 210              	.LVL12:
 280:Core/Src/main.c **** 			  iter++;
 211              		.loc 1 280 6 is_stmt 1 view .LVU45
 212              		.loc 1 280 10 is_stmt 0 view .LVU46
 213 0036 0137     		adds	r7, r7, #1
 214              	.LVL13:
 215              	.L6:
 216              		.loc 1 280 10 view .LVU47
 217              	.LBE9:
 268:Core/Src/main.c **** 			  int32_t xi2 = (xi*xi)/SCALE;
 218              		.loc 1 268 16 is_stmt 1 view .LVU48
 219 0038 5745     		cmp	r7, r10
 220 003a 0EDA     		bge	.L7
 221              	.LBB10:
 269:Core/Src/main.c **** 			  int32_t yi2 = (yi*yi)/SCALE;
 222              		.loc 1 269 6 view .LVU49
 269:Core/Src/main.c **** 			  int32_t yi2 = (yi*yi)/SCALE;
 223              		.loc 1 269 14 is_stmt 0 view .LVU50
 224 003c 2D49     		ldr	r1, .L15+4
 225 003e 2800     		movs	r0, r5
 226 0040 6843     		muls	r0, r5
 227 0042 FFF7FEFF 		bl	__aeabi_idiv
 228              	.LVL14:
 229 0046 0400     		movs	r4, r0
 230              	.LVL15:
 270:Core/Src/main.c **** 
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 10


 231              		.loc 1 270 6 is_stmt 1 view .LVU51
 270:Core/Src/main.c **** 
 232              		.loc 1 270 14 is_stmt 0 view .LVU52
 233 0048 2A49     		ldr	r1, .L15+4
 234 004a 3000     		movs	r0, r6
 235              	.LVL16:
 270:Core/Src/main.c **** 
 236              		.loc 1 270 14 view .LVU53
 237 004c 7043     		muls	r0, r6
 238 004e FFF7FEFF 		bl	__aeabi_idiv
 239              	.LVL17:
 272:Core/Src/main.c ****                   break;
 240              		.loc 1 272 6 is_stmt 1 view .LVU54
 272:Core/Src/main.c ****                   break;
 241              		.loc 1 272 14 is_stmt 0 view .LVU55
 242 0052 2218     		adds	r2, r4, r0
 272:Core/Src/main.c ****                   break;
 243              		.loc 1 272 9 view .LVU56
 244 0054 284B     		ldr	r3, .L15+8
 245 0056 9A42     		cmp	r2, r3
 246 0058 E3DD     		ble	.L12
 247              	.LVL18:
 248              	.L7:
 272:Core/Src/main.c ****                   break;
 249              		.loc 1 272 9 view .LVU57
 250              	.LBE10:
 281:Core/Src/main.c **** 		  }
 282:Core/Src/main.c **** 		  mandelbrot_sum = mandelbrot_sum + iter;
 251              		.loc 1 282 5 is_stmt 1 view .LVU58
 252              		.loc 1 282 37 is_stmt 0 view .LVU59
 253 005a 0097     		str	r7, [sp]
 254 005c FB17     		asrs	r3, r7, #31
 255 005e 0193     		str	r3, [sp, #4]
 256              		.loc 1 282 20 view .LVU60
 257 0060 029B     		ldr	r3, [sp, #8]
 258 0062 039C     		ldr	r4, [sp, #12]
 259 0064 0099     		ldr	r1, [sp]
 260 0066 019A     		ldr	r2, [sp, #4]
 261 0068 5B18     		adds	r3, r3, r1
 262 006a 5441     		adcs	r4, r4, r2
 263 006c 0293     		str	r3, [sp, #8]
 264 006e 0394     		str	r4, [sp, #12]
 265              	.LVL19:
 266              		.loc 1 282 20 view .LVU61
 267              	.LBE8:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 268              		.loc 1 259 34 is_stmt 1 discriminator 2 view .LVU62
 269 0070 049B     		ldr	r3, [sp, #16]
 270              	.LVL20:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 271              		.loc 1 259 34 is_stmt 0 discriminator 2 view .LVU63
 272 0072 0133     		adds	r3, r3, #1
 273 0074 0493     		str	r3, [sp, #16]
 274              	.LVL21:
 275              	.L10:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 276              		.loc 1 259 22 is_stmt 1 discriminator 1 view .LVU64
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 11


 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 277              		.loc 1 259 29 is_stmt 0 discriminator 1 view .LVU65
 278 0076 5B46     		mov	r3, fp
 279 0078 013B     		subs	r3, r3, #1
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 280              		.loc 1 259 22 discriminator 1 view .LVU66
 281 007a 049A     		ldr	r2, [sp, #16]
 282 007c 9342     		cmp	r3, r2
 283 007e 1EDD     		ble	.L13
 284              	.LBB11:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 285              		.loc 1 262 5 is_stmt 1 view .LVU67
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 286              		.loc 1 262 19 is_stmt 0 view .LVU68
 287 0080 0498     		ldr	r0, [sp, #16]
 288 0082 C117     		asrs	r1, r0, #31
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 289              		.loc 1 262 30 view .LVU69
 290 0084 1D4A     		ldr	r2, .L15+12
 291 0086 0023     		movs	r3, #0
 292 0088 FFF7FEFF 		bl	__aeabi_lmul
 293              	.LVL22:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 294              		.loc 1 262 40 view .LVU70
 295 008c 5B46     		mov	r3, fp
 296 008e DB17     		asrs	r3, r3, #31
 297 0090 5A46     		mov	r2, fp
 298 0092 FFF7FEFF 		bl	__aeabi_ldivmod
 299              	.LVL23:
 262:Core/Src/main.c **** 		  // y0 = (y/height) * 2.0 - 1.0
 300              		.loc 1 262 49 view .LVU71
 301 0096 1A4B     		ldr	r3, .L15+16
 302 0098 9946     		mov	r9, r3
 303 009a 8144     		add	r9, r9, r0
 304              	.LVL24:
 264:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 305              		.loc 1 264 5 is_stmt 1 view .LVU72
 264:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 306              		.loc 1 264 19 is_stmt 0 view .LVU73
 307 009c 0598     		ldr	r0, [sp, #20]
 308 009e C117     		asrs	r1, r0, #31
 264:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 309              		.loc 1 264 30 view .LVU74
 310 00a0 184A     		ldr	r2, .L15+20
 311 00a2 0023     		movs	r3, #0
 312 00a4 FFF7FEFF 		bl	__aeabi_lmul
 313              	.LVL25:
 264:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 314              		.loc 1 264 40 view .LVU75
 315 00a8 069A     		ldr	r2, [sp, #24]
 316 00aa D317     		asrs	r3, r2, #31
 317 00ac FFF7FEFF 		bl	__aeabi_ldivmod
 318              	.LVL26:
 264:Core/Src/main.c **** 		  int32_t xi = 0, yi =0;
 319              		.loc 1 264 50 view .LVU76
 320 00b0 154B     		ldr	r3, .L15+24
 321 00b2 9846     		mov	r8, r3
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 12


 322 00b4 8044     		add	r8, r8, r0
 323              	.LVL27:
 265:Core/Src/main.c **** 		  int iter = 0;
 324              		.loc 1 265 5 is_stmt 1 view .LVU77
 266:Core/Src/main.c **** 
 325              		.loc 1 266 5 view .LVU78
 268:Core/Src/main.c **** 			  int32_t xi2 = (xi*xi)/SCALE;
 326              		.loc 1 268 5 view .LVU79
 266:Core/Src/main.c **** 
 327              		.loc 1 266 9 is_stmt 0 view .LVU80
 328 00b6 0027     		movs	r7, #0
 265:Core/Src/main.c **** 		  int iter = 0;
 329              		.loc 1 265 21 view .LVU81
 330 00b8 0026     		movs	r6, #0
 265:Core/Src/main.c **** 		  int iter = 0;
 331              		.loc 1 265 13 view .LVU82
 332 00ba 0025     		movs	r5, #0
 268:Core/Src/main.c **** 			  int32_t xi2 = (xi*xi)/SCALE;
 333              		.loc 1 268 11 view .LVU83
 334 00bc BCE7     		b	.L6
 335              	.LVL28:
 336              	.L13:
 268:Core/Src/main.c **** 			  int32_t xi2 = (xi*xi)/SCALE;
 337              		.loc 1 268 11 view .LVU84
 338              	.LBE11:
 339              	.LBE7:
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 340              		.loc 1 258 34 discriminator 2 view .LVU85
 341 00be DA46     		mov	r10, fp
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 342              		.loc 1 258 34 is_stmt 1 discriminator 2 view .LVU86
 343 00c0 059B     		ldr	r3, [sp, #20]
 344 00c2 0133     		adds	r3, r3, #1
 345 00c4 0593     		str	r3, [sp, #20]
 346              	.LVL29:
 347              	.L5:
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 348              		.loc 1 258 21 discriminator 1 view .LVU87
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 349              		.loc 1 258 29 is_stmt 0 discriminator 1 view .LVU88
 350 00c6 069B     		ldr	r3, [sp, #24]
 351 00c8 013B     		subs	r3, r3, #1
 258:Core/Src/main.c **** 	  for (int x = 0; x < width-1; x++){
 352              		.loc 1 258 21 discriminator 1 view .LVU89
 353 00ca 059A     		ldr	r2, [sp, #20]
 354 00cc 9342     		cmp	r3, r2
 355 00ce 05DD     		ble	.L14
 356              	.LBB12:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 357              		.loc 1 259 13 view .LVU90
 358 00d0 0023     		movs	r3, #0
 359 00d2 0493     		str	r3, [sp, #16]
 360 00d4 D346     		mov	fp, r10
 361 00d6 079B     		ldr	r3, [sp, #28]
 362 00d8 9A46     		mov	r10, r3
 363              	.LVL30:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 13


 364              		.loc 1 259 13 view .LVU91
 365 00da CCE7     		b	.L10
 366              	.LVL31:
 367              	.L14:
 259:Core/Src/main.c **** 		  // Convert to fixed-point coordinates
 368              		.loc 1 259 13 view .LVU92
 369              	.LBE12:
 370              	.LBE13:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 	  }
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****     
 287:Core/Src/main.c ****     return mandelbrot_sum;
 371              		.loc 1 287 5 is_stmt 1 view .LVU93
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** }
 372              		.loc 1 289 1 is_stmt 0 view .LVU94
 373 00dc 0298     		ldr	r0, [sp, #8]
 374 00de 0399     		ldr	r1, [sp, #12]
 375 00e0 09B0     		add	sp, sp, #36
 376              		@ sp needed
 377              	.LVL32:
 378              		.loc 1 289 1 view .LVU95
 379 00e2 F0BC     		pop	{r4, r5, r6, r7}
 380 00e4 BB46     		mov	fp, r7
 381 00e6 B246     		mov	r10, r6
 382 00e8 A946     		mov	r9, r5
 383 00ea A046     		mov	r8, r4
 384 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 385              	.L16:
 386 00ee C046     		.align	2
 387              	.L15:
 388 00f0 20A10700 		.word	500000
 389 00f4 40420F00 		.word	1000000
 390 00f8 00093D00 		.word	4000000
 391 00fc E0673500 		.word	3500000
 392 0100 60DAD9FF 		.word	-2500000
 393 0104 80841E00 		.word	2000000
 394 0108 C0BDF0FF 		.word	-1000000
 395              		.cfi_endproc
 396              	.LFE43:
 398              		.global	__aeabi_i2d
 399              		.global	__aeabi_dmul
 400              		.global	__aeabi_ddiv
 401              		.global	__aeabi_dsub
 402              		.global	__aeabi_dadd
 403              		.global	__aeabi_dcmple
 404              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 405              		.align	1
 406              		.global	calculate_mandelbrot_double
 407              		.syntax unified
 408              		.code	16
 409              		.thumb_func
 411              	calculate_mandelbrot_double:
 412              	.LVL33:
 413              	.LFB44:
 290:Core/Src/main.c **** 
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 14


 291:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 292:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 414              		.loc 1 292 80 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 64
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		.loc 1 292 80 is_stmt 0 view .LVU97
 419 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 420              	.LCFI5:
 421              		.cfi_def_cfa_offset 20
 422              		.cfi_offset 4, -20
 423              		.cfi_offset 5, -16
 424              		.cfi_offset 6, -12
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 DE46     		mov	lr, fp
 428 0004 5746     		mov	r7, r10
 429 0006 4E46     		mov	r6, r9
 430 0008 4546     		mov	r5, r8
 431 000a E0B5     		push	{r5, r6, r7, lr}
 432              	.LCFI6:
 433              		.cfi_def_cfa_offset 36
 434              		.cfi_offset 8, -36
 435              		.cfi_offset 9, -32
 436              		.cfi_offset 10, -28
 437              		.cfi_offset 11, -24
 438 000c 91B0     		sub	sp, sp, #68
 439              	.LCFI7:
 440              		.cfi_def_cfa_offset 104
 441 000e 0F91     		str	r1, [sp, #60]
 442 0010 9146     		mov	r9, r2
 293:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 443              		.loc 1 293 5 is_stmt 1 view .LVU98
 444              	.LVL34:
 294:Core/Src/main.c ****     //TODO: Complete the function implementation
 295:Core/Src/main.c ****     for (int y = 0; y < height-1; y++){
 445              		.loc 1 295 5 view .LVU99
 446              	.LBB14:
 447              		.loc 1 295 10 view .LVU100
 448              		.loc 1 295 14 is_stmt 0 view .LVU101
 449 0012 0023     		movs	r3, #0
 450 0014 0E93     		str	r3, [sp, #56]
 451              	.LBE14:
 293:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 452              		.loc 1 293 14 view .LVU102
 453 0016 0023     		movs	r3, #0
 454 0018 0024     		movs	r4, #0
 455 001a 0C93     		str	r3, [sp, #48]
 456 001c 0D94     		str	r4, [sp, #52]
 457 001e 0B90     		str	r0, [sp, #44]
 458              	.LBB20:
 459              		.loc 1 295 5 view .LVU103
 460 0020 8EE0     		b	.L18
 461              	.LVL35:
 462              	.L21:
 463              	.LBB15:
 464              	.LBB16:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 15


 465              	.LBB17:
 296:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 297:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 298:Core/Src/main.c ****     		  // x0 = (x/width) * 3.5 - 2.5
 299:Core/Src/main.c ****     		  double x0 = ((double)x * 3.5 / width) - 2.5;
 300:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 301:Core/Src/main.c ****     		  double y0 = ((double)y * 2.0 / height) - 1.0;
 302:Core/Src/main.c ****     		  double xi = 0, yi =0;
 303:Core/Src/main.c ****     		  int iter = 0;
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     		  while (iter< max_iterations && (xi*xi+yi*yi)<=4){
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     			  double temp = xi*xi-yi*yi;
 466              		.loc 1 307 10 is_stmt 1 view .LVU104
 467              		.loc 1 307 17 is_stmt 0 view .LVU105
 468 0022 029A     		ldr	r2, [sp, #8]
 469 0024 039B     		ldr	r3, [sp, #12]
 470 0026 0098     		ldr	r0, [sp]
 471 0028 0199     		ldr	r1, [sp, #4]
 472 002a FFF7FEFF 		bl	__aeabi_dsub
 473              	.LVL36:
 474 002e 0090     		str	r0, [sp]
 475 0030 0191     		str	r1, [sp, #4]
 476              	.LVL37:
 308:Core/Src/main.c ****     			  yi = (2*xi*yi)+y0;
 477              		.loc 1 308 10 is_stmt 1 view .LVU106
 478              		.loc 1 308 17 is_stmt 0 view .LVU107
 479 0032 3200     		movs	r2, r6
 480 0034 3B00     		movs	r3, r7
 481 0036 3000     		movs	r0, r6
 482              	.LVL38:
 483              		.loc 1 308 17 view .LVU108
 484 0038 3900     		movs	r1, r7
 485 003a FFF7FEFF 		bl	__aeabi_dadd
 486              	.LVL39:
 487              		.loc 1 308 20 view .LVU109
 488 003e 2200     		movs	r2, r4
 489 0040 2B00     		movs	r3, r5
 490 0042 FFF7FEFF 		bl	__aeabi_dmul
 491              	.LVL40:
 492              		.loc 1 308 13 view .LVU110
 493 0046 069A     		ldr	r2, [sp, #24]
 494 0048 079B     		ldr	r3, [sp, #28]
 495 004a FFF7FEFF 		bl	__aeabi_dadd
 496              	.LVL41:
 497 004e 0400     		movs	r4, r0
 498              	.LVL42:
 499              		.loc 1 308 13 view .LVU111
 500 0050 0D00     		movs	r5, r1
 501              	.LVL43:
 309:Core/Src/main.c ****     			  xi = temp + x0;
 502              		.loc 1 309 10 is_stmt 1 view .LVU112
 503              		.loc 1 309 13 is_stmt 0 view .LVU113
 504 0052 009A     		ldr	r2, [sp]
 505 0054 019B     		ldr	r3, [sp, #4]
 506 0056 0498     		ldr	r0, [sp, #16]
 507 0058 0599     		ldr	r1, [sp, #20]
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 16


 508 005a FFF7FEFF 		bl	__aeabi_dadd
 509              	.LVL44:
 510 005e 0600     		movs	r6, r0
 511              	.LVL45:
 512              		.loc 1 309 13 view .LVU114
 513 0060 0F00     		movs	r7, r1
 514              	.LVL46:
 310:Core/Src/main.c ****     			  iter++;
 515              		.loc 1 310 10 is_stmt 1 view .LVU115
 516              		.loc 1 310 14 is_stmt 0 view .LVU116
 517 0062 0123     		movs	r3, #1
 518 0064 9C46     		mov	ip, r3
 519 0066 E044     		add	r8, r8, ip
 520              	.LVL47:
 521              	.L19:
 522              		.loc 1 310 14 view .LVU117
 523              	.LBE17:
 305:Core/Src/main.c **** 
 524              		.loc 1 305 37 is_stmt 1 view .LVU118
 525 0068 C845     		cmp	r8, r9
 526 006a 1BDA     		bge	.L20
 305:Core/Src/main.c **** 
 527              		.loc 1 305 43 is_stmt 0 discriminator 1 view .LVU119
 528 006c 3200     		movs	r2, r6
 529 006e 3B00     		movs	r3, r7
 530 0070 3000     		movs	r0, r6
 531 0072 3900     		movs	r1, r7
 532 0074 FFF7FEFF 		bl	__aeabi_dmul
 533              	.LVL48:
 534 0078 0090     		str	r0, [sp]
 535 007a 0191     		str	r1, [sp, #4]
 305:Core/Src/main.c **** 
 536              		.loc 1 305 49 discriminator 1 view .LVU120
 537 007c 2200     		movs	r2, r4
 538 007e 2B00     		movs	r3, r5
 539 0080 2000     		movs	r0, r4
 540 0082 2900     		movs	r1, r5
 541 0084 FFF7FEFF 		bl	__aeabi_dmul
 542              	.LVL49:
 543 0088 0200     		movs	r2, r0
 544 008a 0B00     		movs	r3, r1
 545 008c 0292     		str	r2, [sp, #8]
 546 008e 0393     		str	r3, [sp, #12]
 305:Core/Src/main.c **** 
 547              		.loc 1 305 46 discriminator 1 view .LVU121
 548 0090 0098     		ldr	r0, [sp]
 549 0092 0199     		ldr	r1, [sp, #4]
 550 0094 FFF7FEFF 		bl	__aeabi_dadd
 551              	.LVL50:
 305:Core/Src/main.c **** 
 552              		.loc 1 305 37 discriminator 1 view .LVU122
 553 0098 0022     		movs	r2, #0
 554 009a 354B     		ldr	r3, .L27
 555 009c FFF7FEFF 		bl	__aeabi_dcmple
 556              	.LVL51:
 557 00a0 0028     		cmp	r0, #0
 558 00a2 BED1     		bne	.L21
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 17


 559              	.L20:
 311:Core/Src/main.c ****     		  }
 312:Core/Src/main.c ****     		  mandelbrot_sum = mandelbrot_sum + iter;
 560              		.loc 1 312 9 is_stmt 1 view .LVU123
 561              		.loc 1 312 41 is_stmt 0 view .LVU124
 562 00a4 4346     		mov	r3, r8
 563 00a6 0893     		str	r3, [sp, #32]
 564 00a8 DB17     		asrs	r3, r3, #31
 565 00aa 0993     		str	r3, [sp, #36]
 566              		.loc 1 312 24 view .LVU125
 567 00ac 0C9B     		ldr	r3, [sp, #48]
 568 00ae 0D9C     		ldr	r4, [sp, #52]
 569 00b0 0899     		ldr	r1, [sp, #32]
 570 00b2 099A     		ldr	r2, [sp, #36]
 571 00b4 5B18     		adds	r3, r3, r1
 572 00b6 5441     		adcs	r4, r4, r2
 573 00b8 0C93     		str	r3, [sp, #48]
 574 00ba 0D94     		str	r4, [sp, #52]
 575              	.LVL52:
 576              		.loc 1 312 24 view .LVU126
 577              	.LBE16:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 578              		.loc 1 296 38 is_stmt 1 discriminator 2 view .LVU127
 579 00bc 0A9B     		ldr	r3, [sp, #40]
 580              	.LVL53:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 581              		.loc 1 296 38 is_stmt 0 discriminator 2 view .LVU128
 582 00be 0133     		adds	r3, r3, #1
 583 00c0 0A93     		str	r3, [sp, #40]
 584              	.LVL54:
 585              	.L23:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 586              		.loc 1 296 26 is_stmt 1 discriminator 1 view .LVU129
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 587              		.loc 1 296 33 is_stmt 0 discriminator 1 view .LVU130
 588 00c2 0B9B     		ldr	r3, [sp, #44]
 589 00c4 013B     		subs	r3, r3, #1
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 590              		.loc 1 296 26 discriminator 1 view .LVU131
 591 00c6 0A9A     		ldr	r2, [sp, #40]
 592 00c8 9342     		cmp	r3, r2
 593 00ca 36DD     		ble	.L25
 594              	.LBB18:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 595              		.loc 1 299 9 is_stmt 1 view .LVU132
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 596              		.loc 1 299 22 is_stmt 0 view .LVU133
 597 00cc 0A98     		ldr	r0, [sp, #40]
 598 00ce FFF7FEFF 		bl	__aeabi_i2d
 599              	.LVL55:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 600              		.loc 1 299 32 view .LVU134
 601 00d2 0022     		movs	r2, #0
 602 00d4 274B     		ldr	r3, .L27+4
 603 00d6 FFF7FEFF 		bl	__aeabi_dmul
 604              	.LVL56:
 605 00da 0400     		movs	r4, r0
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 18


 606 00dc 0D00     		movs	r5, r1
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 607              		.loc 1 299 38 view .LVU135
 608 00de 0B98     		ldr	r0, [sp, #44]
 609 00e0 FFF7FEFF 		bl	__aeabi_i2d
 610              	.LVL57:
 611 00e4 0200     		movs	r2, r0
 612 00e6 0B00     		movs	r3, r1
 613 00e8 2000     		movs	r0, r4
 614 00ea 2900     		movs	r1, r5
 615 00ec FFF7FEFF 		bl	__aeabi_ddiv
 616              	.LVL58:
 299:Core/Src/main.c ****     		  // y0 = (y/height) * 2.0 - 1.0
 617              		.loc 1 299 16 view .LVU136
 618 00f0 0022     		movs	r2, #0
 619 00f2 214B     		ldr	r3, .L27+8
 620 00f4 FFF7FEFF 		bl	__aeabi_dsub
 621              	.LVL59:
 622 00f8 0490     		str	r0, [sp, #16]
 623 00fa 0591     		str	r1, [sp, #20]
 624              	.LVL60:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 625              		.loc 1 301 9 is_stmt 1 view .LVU137
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 626              		.loc 1 301 22 is_stmt 0 view .LVU138
 627 00fc 5846     		mov	r0, fp
 628              	.LVL61:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 629              		.loc 1 301 22 view .LVU139
 630 00fe FFF7FEFF 		bl	__aeabi_i2d
 631              	.LVL62:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 632              		.loc 1 301 32 view .LVU140
 633 0102 0200     		movs	r2, r0
 634 0104 0B00     		movs	r3, r1
 635 0106 FFF7FEFF 		bl	__aeabi_dadd
 636              	.LVL63:
 637 010a 0400     		movs	r4, r0
 638 010c 0D00     		movs	r5, r1
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 639              		.loc 1 301 38 view .LVU141
 640 010e 5046     		mov	r0, r10
 641 0110 FFF7FEFF 		bl	__aeabi_i2d
 642              	.LVL64:
 643 0114 0200     		movs	r2, r0
 644 0116 0B00     		movs	r3, r1
 645 0118 2000     		movs	r0, r4
 646 011a 2900     		movs	r1, r5
 647 011c FFF7FEFF 		bl	__aeabi_ddiv
 648              	.LVL65:
 301:Core/Src/main.c ****     		  double xi = 0, yi =0;
 649              		.loc 1 301 16 view .LVU142
 650 0120 0022     		movs	r2, #0
 651 0122 164B     		ldr	r3, .L27+12
 652 0124 FFF7FEFF 		bl	__aeabi_dsub
 653              	.LVL66:
 654 0128 0690     		str	r0, [sp, #24]
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 19


 655 012a 0791     		str	r1, [sp, #28]
 656              	.LVL67:
 302:Core/Src/main.c ****     		  int iter = 0;
 657              		.loc 1 302 9 is_stmt 1 view .LVU143
 303:Core/Src/main.c **** 
 658              		.loc 1 303 9 view .LVU144
 305:Core/Src/main.c **** 
 659              		.loc 1 305 9 view .LVU145
 303:Core/Src/main.c **** 
 660              		.loc 1 303 13 is_stmt 0 view .LVU146
 661 012c 0023     		movs	r3, #0
 662 012e 9846     		mov	r8, r3
 302:Core/Src/main.c ****     		  int iter = 0;
 663              		.loc 1 302 24 view .LVU147
 664 0130 0024     		movs	r4, #0
 665 0132 0025     		movs	r5, #0
 302:Core/Src/main.c ****     		  int iter = 0;
 666              		.loc 1 302 16 view .LVU148
 667 0134 2600     		movs	r6, r4
 668 0136 2F00     		movs	r7, r5
 305:Core/Src/main.c **** 
 669              		.loc 1 305 15 view .LVU149
 670 0138 96E7     		b	.L19
 671              	.LVL68:
 672              	.L25:
 305:Core/Src/main.c **** 
 673              		.loc 1 305 15 view .LVU150
 674              	.LBE18:
 675              	.LBE15:
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 676              		.loc 1 295 36 is_stmt 1 discriminator 2 view .LVU151
 677 013a 0E9B     		ldr	r3, [sp, #56]
 678 013c 0133     		adds	r3, r3, #1
 679 013e 0E93     		str	r3, [sp, #56]
 680              	.LVL69:
 681              	.L18:
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 682              		.loc 1 295 23 discriminator 1 view .LVU152
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 683              		.loc 1 295 31 is_stmt 0 discriminator 1 view .LVU153
 684 0140 0F9B     		ldr	r3, [sp, #60]
 685 0142 013B     		subs	r3, r3, #1
 295:Core/Src/main.c ****     	  for (int x = 0; x < width-1; x++){
 686              		.loc 1 295 23 discriminator 1 view .LVU154
 687 0144 0E9A     		ldr	r2, [sp, #56]
 688 0146 9342     		cmp	r3, r2
 689 0148 08DD     		ble	.L26
 690              	.LBB19:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 691              		.loc 1 296 17 view .LVU155
 692 014a 0023     		movs	r3, #0
 693 014c 9A46     		mov	r10, r3
 694 014e 0E9B     		ldr	r3, [sp, #56]
 695 0150 9B46     		mov	fp, r3
 696 0152 5346     		mov	r3, r10
 697 0154 0A93     		str	r3, [sp, #40]
 698 0156 0F9B     		ldr	r3, [sp, #60]
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 20


 699 0158 9A46     		mov	r10, r3
 700 015a B2E7     		b	.L23
 701              	.LVL70:
 702              	.L26:
 296:Core/Src/main.c ****     		  // Convert to fixed-point coordinates
 703              		.loc 1 296 17 view .LVU156
 704              	.LBE19:
 705              	.LBE20:
 313:Core/Src/main.c ****     	  }
 314:Core/Src/main.c ****       }
 315:Core/Src/main.c ****     
 316:Core/Src/main.c ****     return mandelbrot_sum;
 706              		.loc 1 316 5 is_stmt 1 view .LVU157
 317:Core/Src/main.c **** }
 707              		.loc 1 317 1 is_stmt 0 view .LVU158
 708 015c 0C98     		ldr	r0, [sp, #48]
 709 015e 0D99     		ldr	r1, [sp, #52]
 710 0160 11B0     		add	sp, sp, #68
 711              		@ sp needed
 712              	.LVL71:
 713              		.loc 1 317 1 view .LVU159
 714 0162 F0BC     		pop	{r4, r5, r6, r7}
 715 0164 BB46     		mov	fp, r7
 716 0166 B246     		mov	r10, r6
 717 0168 A946     		mov	r9, r5
 718 016a A046     		mov	r8, r4
 719 016c F0BD     		pop	{r4, r5, r6, r7, pc}
 720              	.L28:
 721 016e C046     		.align	2
 722              	.L27:
 723 0170 00001040 		.word	1074790400
 724 0174 00000C40 		.word	1074528256
 725 0178 00000440 		.word	1074003968
 726 017c 0000F03F 		.word	1072693248
 727              		.cfi_endproc
 728              	.LFE44:
 730              		.section	.text.Error_Handler,"ax",%progbits
 731              		.align	1
 732              		.global	Error_Handler
 733              		.syntax unified
 734              		.code	16
 735              		.thumb_func
 737              	Error_Handler:
 738              	.LFB45:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /* USER CODE END 4 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
 322:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** void Error_Handler(void)
 326:Core/Src/main.c **** {
 739              		.loc 1 326 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ Volatile: function does not return.
 742              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 21


 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 327:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 328:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 329:Core/Src/main.c ****   __disable_irq();
 745              		.loc 1 329 3 view .LVU161
 746              	.LBB21:
 747              	.LBI21:
 748              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 22


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 23


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 749              		.loc 2 140 27 view .LVU162
 750              	.LBB22:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 751              		.loc 2 142 3 view .LVU163
 752              		.syntax divided
 753              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 754 0000 72B6     		cpsid i
 755              	@ 0 "" 2
 756              		.thumb
 757              		.syntax unified
 758              	.L30:
 759              	.LBE22:
 760              	.LBE21:
 330:Core/Src/main.c ****   while (1)
 761              		.loc 1 330 3 view .LVU164
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****   }
 762              		.loc 1 332 3 view .LVU165
 330:Core/Src/main.c ****   while (1)
 763              		.loc 1 330 9 view .LVU166
 764 0002 FEE7     		b	.L30
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 24


 765              		.cfi_endproc
 766              	.LFE45:
 768              		.section	.text.SystemClock_Config,"ax",%progbits
 769              		.align	1
 770              		.global	SystemClock_Config
 771              		.syntax unified
 772              		.code	16
 773              		.thumb_func
 775              	SystemClock_Config:
 776              	.LFB41:
 192:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 777              		.loc 1 192 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 64
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781 0000 00B5     		push	{lr}
 782              	.LCFI8:
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 14, -4
 785 0002 91B0     		sub	sp, sp, #68
 786              	.LCFI9:
 787              		.cfi_def_cfa_offset 72
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 788              		.loc 1 193 3 view .LVU168
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 789              		.loc 1 193 22 is_stmt 0 view .LVU169
 790 0004 3022     		movs	r2, #48
 791 0006 0021     		movs	r1, #0
 792 0008 04A8     		add	r0, sp, #16
 793 000a FFF7FEFF 		bl	memset
 794              	.LVL72:
 194:Core/Src/main.c **** 
 795              		.loc 1 194 3 is_stmt 1 view .LVU170
 194:Core/Src/main.c **** 
 796              		.loc 1 194 22 is_stmt 0 view .LVU171
 797 000e 1022     		movs	r2, #16
 798 0010 0021     		movs	r1, #0
 799 0012 6846     		mov	r0, sp
 800 0014 FFF7FEFF 		bl	memset
 801              	.LVL73:
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 802              		.loc 1 199 3 is_stmt 1 view .LVU172
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 803              		.loc 1 199 36 is_stmt 0 view .LVU173
 804 0018 0223     		movs	r3, #2
 805 001a 0493     		str	r3, [sp, #16]
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 806              		.loc 1 200 3 is_stmt 1 view .LVU174
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 807              		.loc 1 200 30 is_stmt 0 view .LVU175
 808 001c 013B     		subs	r3, r3, #1
 809 001e 0793     		str	r3, [sp, #28]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 810              		.loc 1 201 3 is_stmt 1 view .LVU176
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 811              		.loc 1 201 41 is_stmt 0 view .LVU177
 812 0020 0F33     		adds	r3, r3, #15
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 25


 813 0022 0893     		str	r3, [sp, #32]
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 814              		.loc 1 202 3 is_stmt 1 view .LVU178
 203:Core/Src/main.c ****   {
 815              		.loc 1 203 3 view .LVU179
 203:Core/Src/main.c ****   {
 816              		.loc 1 203 7 is_stmt 0 view .LVU180
 817 0024 04A8     		add	r0, sp, #16
 818 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 819              	.LVL74:
 203:Core/Src/main.c ****   {
 820              		.loc 1 203 6 discriminator 1 view .LVU181
 821 002a 0028     		cmp	r0, #0
 822 002c 0DD1     		bne	.L34
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 823              		.loc 1 210 3 is_stmt 1 view .LVU182
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 824              		.loc 1 210 31 is_stmt 0 view .LVU183
 825 002e 0723     		movs	r3, #7
 826 0030 0093     		str	r3, [sp]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 827              		.loc 1 212 3 is_stmt 1 view .LVU184
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 828              		.loc 1 212 34 is_stmt 0 view .LVU185
 829 0032 0023     		movs	r3, #0
 830 0034 0193     		str	r3, [sp, #4]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 831              		.loc 1 213 3 is_stmt 1 view .LVU186
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 832              		.loc 1 213 35 is_stmt 0 view .LVU187
 833 0036 0293     		str	r3, [sp, #8]
 214:Core/Src/main.c **** 
 834              		.loc 1 214 3 is_stmt 1 view .LVU188
 214:Core/Src/main.c **** 
 835              		.loc 1 214 36 is_stmt 0 view .LVU189
 836 0038 0393     		str	r3, [sp, #12]
 216:Core/Src/main.c ****   {
 837              		.loc 1 216 3 is_stmt 1 view .LVU190
 216:Core/Src/main.c ****   {
 838              		.loc 1 216 7 is_stmt 0 view .LVU191
 839 003a 0021     		movs	r1, #0
 840 003c 6846     		mov	r0, sp
 841 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 842              	.LVL75:
 216:Core/Src/main.c ****   {
 843              		.loc 1 216 6 discriminator 1 view .LVU192
 844 0042 0028     		cmp	r0, #0
 845 0044 03D1     		bne	.L35
 220:Core/Src/main.c **** 
 846              		.loc 1 220 1 view .LVU193
 847 0046 11B0     		add	sp, sp, #68
 848              		@ sp needed
 849 0048 00BD     		pop	{pc}
 850              	.L34:
 205:Core/Src/main.c ****   }
 851              		.loc 1 205 5 is_stmt 1 view .LVU194
 852 004a FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 26


 853              	.LVL76:
 854              	.L35:
 218:Core/Src/main.c ****   }
 855              		.loc 1 218 5 view .LVU195
 856 004e FFF7FEFF 		bl	Error_Handler
 857              	.LVL77:
 858              		.cfi_endproc
 859              	.LFE41:
 861              		.section	.text.main,"ax",%progbits
 862              		.align	1
 863              		.global	main
 864              		.syntax unified
 865              		.code	16
 866              		.thumb_func
 868              	main:
 869              	.LFB40:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 870              		.loc 1 90 1 view -0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 875              	.LCFI10:
 876              		.cfi_def_cfa_offset 24
 877              		.cfi_offset 3, -24
 878              		.cfi_offset 4, -20
 879              		.cfi_offset 5, -16
 880              		.cfi_offset 6, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
 883              		.loc 1 98 3 view .LVU197
 884 0002 FFF7FEFF 		bl	HAL_Init
 885              	.LVL78:
 105:Core/Src/main.c **** 
 886              		.loc 1 105 3 view .LVU198
 887 0006 FFF7FEFF 		bl	SystemClock_Config
 888              	.LVL79:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 889              		.loc 1 112 3 view .LVU199
 890 000a FFF7FEFF 		bl	MX_GPIO_Init
 891              	.LVL80:
 115:Core/Src/main.c **** 
 892              		.loc 1 115 3 view .LVU200
 893 000e 0122     		movs	r2, #1
 894 0010 0121     		movs	r1, #1
 895 0012 1B48     		ldr	r0, .L40
 896 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 897              	.LVL81:
 131:Core/Src/main.c **** 
 898              		.loc 1 131 3 view .LVU201
 135:Core/Src/main.c ****           // Record start time
 899              		.loc 1 135 7 view .LVU202
 900              	.LBB23:
 135:Core/Src/main.c ****           // Record start time
 901              		.loc 1 135 12 view .LVU203
 135:Core/Src/main.c ****           // Record start time
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 27


 902              		.loc 1 135 16 is_stmt 0 view .LVU204
 903 0018 0024     		movs	r4, #0
 135:Core/Src/main.c ****           // Record start time
 904              		.loc 1 135 7 view .LVU205
 905 001a 29E0     		b	.L37
 906              	.LVL82:
 907              	.L38:
 137:Core/Src/main.c **** 
 908              		.loc 1 137 11 is_stmt 1 view .LVU206
 137:Core/Src/main.c **** 
 909              		.loc 1 137 24 is_stmt 0 view .LVU207
 910 001c FFF7FEFF 		bl	HAL_GetTick
 911              	.LVL83:
 137:Core/Src/main.c **** 
 912              		.loc 1 137 22 discriminator 1 view .LVU208
 913 0020 184F     		ldr	r7, .L40+4
 914 0022 3860     		str	r0, [r7]
 140:Core/Src/main.c **** 
 915              		.loc 1 140 11 is_stmt 1 view .LVU209
 140:Core/Src/main.c **** 
 916              		.loc 1 140 23 is_stmt 0 view .LVU210
 917 0024 184B     		ldr	r3, .L40+8
 918 0026 A500     		lsls	r5, r4, #2
 919 0028 E858     		ldr	r0, [r5, r3]
 920 002a 6422     		movs	r2, #100
 921 002c 0100     		movs	r1, r0
 922 002e FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 923              	.LVL84:
 140:Core/Src/main.c **** 
 924              		.loc 1 140 21 discriminator 1 view .LVU211
 925 0032 164E     		ldr	r6, .L40+12
 926 0034 3060     		str	r0, [r6]
 143:Core/Src/main.c **** 
 927              		.loc 1 143 11 is_stmt 1 view .LVU212
 143:Core/Src/main.c **** 
 928              		.loc 1 143 22 is_stmt 0 view .LVU213
 929 0036 FFF7FEFF 		bl	HAL_GetTick
 930              	.LVL85:
 143:Core/Src/main.c **** 
 931              		.loc 1 143 20 discriminator 1 view .LVU214
 932 003a 154B     		ldr	r3, .L40+16
 933 003c 1860     		str	r0, [r3]
 145:Core/Src/main.c **** 
 934              		.loc 1 145 11 is_stmt 1 view .LVU215
 145:Core/Src/main.c **** 
 935              		.loc 1 145 37 is_stmt 0 view .LVU216
 936 003e 3B68     		ldr	r3, [r7]
 937 0040 C01A     		subs	r0, r0, r3
 145:Core/Src/main.c **** 
 938              		.loc 1 145 26 view .LVU217
 939 0042 144B     		ldr	r3, .L40+20
 940 0044 1860     		str	r0, [r3]
 148:Core/Src/main.c ****           exec_times[i] = execution_time;
 941              		.loc 1 148 11 is_stmt 1 view .LVU218
 148:Core/Src/main.c ****           exec_times[i] = execution_time;
 942              		.loc 1 148 24 is_stmt 0 view .LVU219
 943 0046 144B     		ldr	r3, .L40+24
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 28


 944 0048 3268     		ldr	r2, [r6]
 945 004a EA50     		str	r2, [r5, r3]
 149:Core/Src/main.c **** 
 946              		.loc 1 149 11 is_stmt 1 view .LVU220
 149:Core/Src/main.c **** 
 947              		.loc 1 149 25 is_stmt 0 view .LVU221
 948 004c 134B     		ldr	r3, .L40+28
 949 004e E850     		str	r0, [r5, r3]
 152:Core/Src/main.c **** 
 950              		.loc 1 152 11 is_stmt 1 view .LVU222
 951 0050 0B4D     		ldr	r5, .L40
 952 0052 0122     		movs	r2, #1
 953 0054 0121     		movs	r1, #1
 954 0056 2800     		movs	r0, r5
 955 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 956              	.LVL86:
 155:Core/Src/main.c **** 
 957              		.loc 1 155 11 view .LVU223
 958 005c FA20     		movs	r0, #250
 959 005e 8000     		lsls	r0, r0, #2
 960 0060 FFF7FEFF 		bl	HAL_Delay
 961              	.LVL87:
 158:Core/Src/main.c ****       }
 962              		.loc 1 158 11 view .LVU224
 963 0064 0022     		movs	r2, #0
 964 0066 0121     		movs	r1, #1
 965 0068 2800     		movs	r0, r5
 966 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 967              	.LVL88:
 135:Core/Src/main.c ****           // Record start time
 968              		.loc 1 135 39 discriminator 3 view .LVU225
 969 006e 0134     		adds	r4, r4, #1
 970              	.LVL89:
 971              	.L37:
 135:Core/Src/main.c ****           // Record start time
 972              		.loc 1 135 25 discriminator 1 view .LVU226
 973 0070 042C     		cmp	r4, #4
 974 0072 D3DD     		ble	.L38
 975              	.LBE23:
 162:Core/Src/main.c ****   
 976              		.loc 1 162 7 view .LVU227
 977 0074 0022     		movs	r2, #0
 978 0076 0121     		movs	r1, #1
 979 0078 0148     		ldr	r0, .L40
 980 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 981              	.LVL90:
 982              	.L39:
 178:Core/Src/main.c ****   {
 983              		.loc 1 178 3 view .LVU228
 183:Core/Src/main.c ****   /* USER CODE END 3 */
 984              		.loc 1 183 3 view .LVU229
 178:Core/Src/main.c ****   {
 985              		.loc 1 178 9 view .LVU230
 986 007e FEE7     		b	.L39
 987              	.L41:
 988              		.align	2
 989              	.L40:
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 29


 990 0080 00040048 		.word	1207960576
 991 0084 00000000 		.word	start_time
 992 0088 00000000 		.word	dim
 993 008c 00000000 		.word	check_sum
 994 0090 00000000 		.word	end_time
 995 0094 00000000 		.word	execution_time
 996 0098 00000000 		.word	checksums
 997 009c 00000000 		.word	exec_times
 998              		.cfi_endproc
 999              	.LFE40:
 1001              		.global	exec_times
 1002              		.section	.bss.exec_times,"aw",%nobits
 1003              		.align	2
 1006              	exec_times:
 1007 0000 00000000 		.space	20
 1007      00000000 
 1007      00000000 
 1007      00000000 
 1007      00000000 
 1008              		.global	checksums
 1009              		.section	.bss.checksums,"aw",%nobits
 1010              		.align	2
 1013              	checksums:
 1014 0000 00000000 		.space	20
 1014      00000000 
 1014      00000000 
 1014      00000000 
 1014      00000000 
 1015              		.global	check_sum
 1016              		.section	.bss.check_sum,"aw",%nobits
 1017              		.align	2
 1020              	check_sum:
 1021 0000 00000000 		.space	4
 1022              		.global	execution_time
 1023              		.section	.bss.execution_time,"aw",%nobits
 1024              		.align	2
 1027              	execution_time:
 1028 0000 00000000 		.space	4
 1029              		.global	end_time
 1030              		.section	.bss.end_time,"aw",%nobits
 1031              		.align	2
 1034              	end_time:
 1035 0000 00000000 		.space	4
 1036              		.global	start_time
 1037              		.section	.bss.start_time,"aw",%nobits
 1038              		.align	2
 1041              	start_time:
 1042 0000 00000000 		.space	4
 1043              		.global	dim
 1044              		.section	.data.dim,"aw"
 1045              		.align	2
 1048              	dim:
 1049 0000 80000000 		.word	128
 1050 0004 A0000000 		.word	160
 1051 0008 C0000000 		.word	192
 1052 000c E0000000 		.word	224
 1053 0010 00010000 		.word	256
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 30


 1054              		.text
 1055              	.Letext0:
 1056              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1057              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1058              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1059              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1060              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1061              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1062              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1063              		.file 10 "<built-in>"
ARM GAS  C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:123    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:129    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:388    .text.calculate_mandelbrot_fixed_point_arithmetic:000000f0 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:405    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:411    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:723    .text.calculate_mandelbrot_double:00000170 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:731    .text.Error_Handler:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:737    .text.Error_Handler:00000000 Error_Handler
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:769    .text.SystemClock_Config:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:775    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:862    .text.main:00000000 $t
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:868    .text.main:00000000 main
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:990    .text.main:00000080 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1041   .bss.start_time:00000000 start_time
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1048   .data.dim:00000000 dim
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1020   .bss.check_sum:00000000 check_sum
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1034   .bss.end_time:00000000 end_time
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1027   .bss.execution_time:00000000 execution_time
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1013   .bss.checksums:00000000 checksums
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1006   .bss.exec_times:00000000 exec_times
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1003   .bss.exec_times:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1010   .bss.checksums:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1017   .bss.check_sum:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1024   .bss.execution_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1031   .bss.end_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1038   .bss.start_time:00000000 $d
C:\Users\joshr\AppData\Local\Temp\ccDDveN5.s:1045   .data.dim:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_ldivmod
__aeabi_idiv
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
